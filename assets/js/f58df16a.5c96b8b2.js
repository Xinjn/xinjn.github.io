"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[53535],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>g});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var c=r.createContext({}),u=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},p=function(n){var e=u(n.components);return r.createElement(c.Provider,{value:e},n.children)},l={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,c=n.parentName,p=i(n,["components","mdxType","originalType","parentName"]),d=u(t),g=a,m=d["".concat(c,".").concat(g)]||d[g]||l[g]||o;return t?r.createElement(m,s(s({ref:e},p),{},{components:t})):r.createElement(m,s({ref:e},p))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=n,i.mdxType="string"==typeof n?n:a,s[1]=i;for(var u=2;u<o;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},12778:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const o={},s=void 0,i={unversionedId:"\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5f39\u5e55\u7ec4\u4ef6/\u5f39\u5e55\u7ec4\u4ef6",id:"\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5f39\u5e55\u7ec4\u4ef6/\u5f39\u5e55\u7ec4\u4ef6",title:"\u5f39\u5e55\u7ec4\u4ef6",description:"React \u5f39\u5e55\u7ec4\u4ef6",source:"@site/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5f39\u5e55\u7ec4\u4ef6/\u5f39\u5e55\u7ec4\u4ef6.md",sourceDirName:"\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5f39\u5e55\u7ec4\u4ef6",slug:"/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5f39\u5e55\u7ec4\u4ef6/",permalink:"/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5f39\u5e55\u7ec4\u4ef6/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5f39\u5e55\u7ec4\u4ef6/\u5f39\u5e55\u7ec4\u4ef6.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"heic2any\u7ec4\u4ef6",permalink:"/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u56fe\u7247\u683c\u5f0f\u8f6c\u6362/heic2any\u7ec4\u4ef6"},next:{title:"\u5f39\u5e55(\u7ad6)\u7ec4\u4ef6",permalink:"/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5f39\u5e55\u7ec4\u4ef6/\u5f39\u5e55(\u7ad6)\u7ec4\u4ef6"}},c={},u=[{value:"React \u5f39\u5e55\u7ec4\u4ef6",id:"react-\u5f39\u5e55\u7ec4\u4ef6",level:3},{value:"\u4e3e\u4f8b\uff1a\u8d85\u7ea7\u5206\u4eab\u5b98",id:"\u4e3e\u4f8b\u8d85\u7ea7\u5206\u4eab\u5b98",level:3}],p={toc:u};function l(n){let{components:e,...o}=n;return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"react-\u5f39\u5e55\u7ec4\u4ef6"},"React \u5f39\u5e55\u7ec4\u4ef6"),(0,a.kt)("p",null,"github:",(0,a.kt)("a",{parentName:"p",href:"https://github.com/BowenZ/rc-danmaku"},"https://github.com/BowenZ/rc-danmaku")),(0,a.kt)("h3",{id:"\u4e3e\u4f8b\u8d85\u7ea7\u5206\u4eab\u5b98"},"\u4e3e\u4f8b\uff1a\u8d85\u7ea7\u5206\u4eab\u5b98"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(24264).Z,width:"373",height:"343"})),(0,a.kt)("p",null,"BarrageText\u7ec4\u4ef6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import errorBoundary from '@ifeng/errorBoundary';\nimport React from 'react';\nimport styles from './index.css';\nimport PropTypes from 'prop-types';\n\nclass BarrageText extends React.PureComponent {\n    static propTypes = {\n        text: PropTypes.string,\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className={styles.barrageText}>\n                <span className={styles.barrageName}>{text}</span> <span className={styles.barrageInfo}>\u62a5\u540d\u6210\u529f</span>\n            </div>\n        );\n    }\n}\n\nexport default errorBoundary(BarrageText);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},".barrageText {\n    height: 56px;\n    background: rgba(0, 0, 0, 0.15);\n    font-size: 32px;\n    color: #ffffff;\n    line-height: 58px;\n    border-radius: 28px;\n    padding: 0 20px;\n}\n.barrageName {\n    font-weight: bold;\n    color: #fff;\n    opacity: 1;\n}\n.barrageInfo {\n    opacity: 0.3;\n    padding-left: 16px;\n}\n")),(0,a.kt)("p",null,"Barrage\u7ec4\u4ef6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import errorBoundary from '@ifeng/errorBoundary';\nimport React from 'react';\nimport Danmaku from 'rc-danmaku';\nimport PropTypes from 'prop-types';\nimport BarrageText from './barrageText';\nimport styles from './index.css';\nimport { jsonp } from 'ThreeTerminal_base/base';\n\nconst getGuid = (window.grounds && window.grounds.getUserInfo() && window.grounds.getUserInfo().getGuid()) || '';\nconst getToken = (window.grounds && window.grounds.getUserInfo() && window.grounds.getUserInfo().getToken()) || '';\nconst getDeviceId =\n    (window.grounds && window.grounds.getUserInfo() && window.grounds.getUserInfo().getDeviceId()) || '';\nconst getOs = (window.grounds && window.grounds.getUserInfo() && window.grounds.getUserInfo().getOs()) || '';\n\nclass Barrage extends React.PureComponent {\n    static propTypes = {\n        listUrl: PropTypes.string,\n        hostApi: PropTypes.string,\n    };\n    danmakuIns = null;\n    danmakuEndNum = 0;\n\n    getCountNum = (countSizeBoxUnit, realValue) => {\n        return parseFloat(countSizeBoxUnit * realValue);\n    };\n\n    // \u65b9\u6cd5\uff1a\u62a5\u540d\u5217\u8868\n    getBarrageTextData = async () => {\n        const { listUrl, hostApi } = this.props;\n        let barrageList = [];\n\n        if (!window.grounds) {\n            document.body.style.visibility = 'visible';\n        }\n        const getIndexData = await jsonp(`${hostApi}/Active_Shareofficer_User/getIndexData`, {\n            data: {\n                guid: getGuid,\n                token: getToken,\n                deviceid: getDeviceId,\n                os: getOs,\n            },\n            cache: false,\n        });\n\n        if (\n            getIndexData &&\n            getIndexData.code === 200 &&\n            getIndexData.data &&\n            getIndexData.data.sign_user &&\n            getIndexData.data.sign_user.length > 0\n        ) {\n            barrageList = getIndexData.data.sign_user.map((item, index) => <BarrageText key={index} text={item} />);\n\n            if (window.grounds) {\n                if (getIndexData.data.signup === 1 && listUrl) {\n                    location.href = listUrl;\n                } else {\n                    document.body.style.visibility = 'visible';\n                }\n            }\n        }\n\n        return barrageList;\n    };\n\n    async componentDidMount() {\n        // \u5f39\u5e55\u8282\u70b9\n        const danmakuDom = document.querySelector('.danmaku-wrapper');\n        // \u5f39\u5e55\u5bb9\u5668\u8282\u70b9\n        const countSizeBoxDom = document.querySelector('#countSizeBox');\n        // \u5f39\u5e55\u5bb9\u5668\u9ad8\n        const countSizeBoxUnit = countSizeBoxDom.offsetWidth / 100;\n\n        console.log(countSizeBoxUnit);\n        const rowHeight = this.getCountNum(countSizeBoxUnit, 72);\n\n        console.log(rowHeight);\n        const minGapWidth = this.getCountNum(countSizeBoxUnit, 40);\n\n        console.log(minGapWidth);\n\n        // \u62a5\u540d\u5217\u8868\n        const barrageList = await this.getBarrageTextData();\n\n        console.log(barrageList);\n\n        let barrageNewList = [];\n        // \u56fa\u5b9athis\n        const self = this; // Barrage\n        // \u5f39\u5e55\u9ad8\u5ea6\n\n        danmakuDom.style.height = `${this.getCountNum(countSizeBoxUnit, 216) + 1}px`;\n\n        // const barrageListTest = Array(200)\n        //     .fill(null)\n        //     .map((item, index) => <BarrageText key={index} text={`\u674e\u6d77\u9633${index}`} />);\n        // \u58f0\u660e\u5f39\u5e55\u793a\u4f8b\u53ca\u5c5e\u6027\n        this.danmakuIns = new Danmaku('.danmaku-wrapper', {\n            rowHeight, // \u5f39\u5e55\u8f68\u9053\u9ad8\u5ea6\uff0c\u9ed8\u8ba440\uff08\u5355\u4f4dpx\uff09\n            speed: 70, // \u5f39\u5e55\u901f\u5ea6\uff0c\u9ed8\u8ba4100\uff08\u5355\u4f4dpx/s\uff09\n            opacity: 1, // \u5f39\u5e55\u900f\u660e\u5ea6\uff0c\u9ed8\u8ba4\u4e3a1\uff0c\u8303\u56f4 0-1\n            maxRow: 2, // \u5f39\u5e55\u6700\u5927\u8f68\u9053\u6570\uff0c\u4f1a\u6839\u636e\u5bb9\u5668\u9ad8\u5ea6\u81ea\u52a8\u8ba1\u7b97\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u8d4b\u503c\n            minGapWidth, // \u5f39\u5e55\u4e4b\u524d\u7684\u6700\u5c0f\u95f4\u9694\u5bbd\u5ea6\uff0c\u9ed8\u8ba4\u503c20\uff08\u5355\u4f4dpx\uff09\n            async onQueueRunOut() {\n                if (self.danmakuEndNum >= 1) {\n                    barrageNewList = await self.getBarrageTextData();\n                    self.danmakuIns.pushAll(barrageNewList);\n                }\n                self.danmakuEndNum++;\n            },\n        });\n        // \u4f4d\u7f6e\u9519\u5f00 \u7b2c\u4e00\u4e2a\n        setTimeout(() => {\n            this.danmakuIns.pushAll(barrageList.splice(0, 1));\n        }, 1000);\n        // \u4f4d\u7f6e\u9519\u5f00 \u5168\u90e8\n        setTimeout(() => {\n            this.danmakuIns.pushAll(barrageList);\n        }, 2000);\n    }\n\n    // \u5220\u9664\u81ea\u8eab\n    componentWillUnmount() {\n        this.danmakuIns.destroy();\n    }\n\n    render() {\n        return (\n            <div className={styles.barrageBox}>\n                <div className={`${styles.barrage} danmaku-wrapper`} />\n                <div className={styles.countSize} id=\"countSizeBox\" />\n            </div>\n        );\n    }\n}\n\nexport default errorBoundary(Barrage);\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},".barrageBox {\n    padding-top: 16px;\n    border: 3px solid greenyellow;\n}\n.barrage {\n    height: 216px;\n    border: 3px solid black;\n}\n.countSize {\n\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n")))}l.isMDXComponent=!0},24264:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/barrage-68c246c94d03ab8efc3f9fe4e4ab06c8.png"}}]);