"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[92],{3905:(n,t,e)=>{e.d(t,{Zo:()=>d,kt:()=>u});var s=e(67294);function i(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function r(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,s)}return e}function a(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){i(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,s,i=function(n,t){if(null==n)return{};var e,s,i={},r=Object.keys(n);for(s=0;s<r.length;s++)e=r[s],t.indexOf(e)>=0||(i[e]=n[e]);return i}(n,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(s=0;s<r.length;s++)e=r[s],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var o=s.createContext({}),c=function(n){var t=s.useContext(o),e=t;return n&&(e="function"==typeof n?n(t):a(a({},t),n)),e},d=function(n){var t=c(n.components);return s.createElement(o.Provider,{value:t},n.children)},h={inlineCode:"code",wrapper:function(n){var t=n.children;return s.createElement(s.Fragment,{},t)}},p=s.forwardRef((function(n,t){var e=n.components,i=n.mdxType,r=n.originalType,o=n.parentName,d=l(n,["components","mdxType","originalType","parentName"]),p=c(e),u=i,m=p["".concat(o,".").concat(u)]||p[u]||h[u]||r;return e?s.createElement(m,a(a({ref:t},d),{},{components:e})):s.createElement(m,a({ref:t},d))}));function u(n,t){var e=arguments,i=t&&t.mdxType;if("string"==typeof n||i){var r=e.length,a=new Array(r);a[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=n,l.mdxType="string"==typeof n?n:i,a[1]=l;for(var c=2;c<r;c++)a[c]=e[c];return s.createElement.apply(null,a)}return s.createElement.apply(null,e)}p.displayName="MDXCreateElement"},29587:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=e(87462),i=(e(67294),e(3905));const r={},a=void 0,l={unversionedId:"\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217/\u624b\u5199Swiper",id:"\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217/\u624b\u5199Swiper",title:"\u624b\u5199Swiper",description:"\u6982\u8ff0",source:"@site/docs/\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217/\u624b\u5199Swiper.md",sourceDirName:"\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217",slug:"/\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217/\u624b\u5199Swiper",permalink:"/docs/\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217/\u624b\u5199Swiper",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217/\u624b\u5199Swiper.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u56fe\u7247\u61d2\u52a0\u8f7d?",permalink:"/docs/\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217/\u56fe\u7247\u61d2\u52a0\u8f7d"},next:{title:"\u624b\u5199\u56fe\u7247\u88c1\u526a",permalink:"/docs/\u9762\u8bd5\u62bc\u9898/JS\u62bc\u9898/\u624b\u5199\u7cfb\u5217/\u624b\u5199\u56fe\u7247\u88c1\u526a"}},o={},c=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:2},{value:"\u539f\u7406",id:"\u539f\u7406",level:2},{value:"\u65b9\u5f0f\u4e00\uff1a\u5b9e\u65f6\u66f4\u65b0\u5750\u6807",id:"\u65b9\u5f0f\u4e00\u5b9e\u65f6\u66f4\u65b0\u5750\u6807",level:2},{value:"\u9ed8\u8ba4\u6c34\u5e73\u65b9\u5411",id:"\u9ed8\u8ba4\u6c34\u5e73\u65b9\u5411",level:2},{value:"\u6dfb\u52a0\u5782\u76f4\u65b9\u5411",id:"\u6dfb\u52a0\u5782\u76f4\u65b9\u5411",level:2},{value:"\u62d6\u62fd Slide",id:"\u62d6\u62fd-slide",level:2},{value:"\u81ea\u52a8\u6ed1\u52a8",id:"\u81ea\u52a8\u6ed1\u52a8",level:2},{value:"\u81ea\u52a8\u6eda\u52a8\u4e0b\u4e00\u9875",id:"\u81ea\u52a8\u6eda\u52a8\u4e0b\u4e00\u9875",level:2},{value:"\u91cd\u6784",id:"\u91cd\u6784",level:2},{value:"\u65b9\u5f0f\u4e8c\uff1a\u5b9e\u65f6\u66f4\u65b0\u8ddd\u79bb",id:"\u65b9\u5f0f\u4e8c\u5b9e\u65f6\u66f4\u65b0\u8ddd\u79bb",level:2},{value:"\u6700\u65b0\u7248\uff08translate\uff09",id:"\u6700\u65b0\u7248translate",level:2},{value:"\u6700\u65b0\u7248(left)",id:"\u6700\u65b0\u7248left",level:2},{value:"\u53c2\u8003",id:"\u53c2\u8003",level:2}],d={toc:c};function h(n){let{components:t,...e}=n;return(0,i.kt)("wrapper",(0,s.Z)({},d,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,i.kt)("p",null,"\u77e5\u8bc6\u70b9\uff1a"),(0,i.kt)("p",null,"\u3010css\u3011transform\u3001transition\n\u3010js\u3011touchstart\u3001touchmove\u3001touchend"),(0,i.kt)("h2",{id:"\u539f\u7406"},"\u539f\u7406"),(0,i.kt)("p",null,"\u62d6\u52a8\u7684\u65f6\u5019\u6539\u53d8 transfrom: translateX(x)\u6765\u6539\u53d8\u5143\u7d20\u7684\u4f4d\u7f6e"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u4f7f\u7528 transform \u79fb\u52a8\u5143\u7d20\u65f6\u4f1a\u542f\u7528\u786c\u4ef6\u52a0\u901f\u6e32\u67d3\u753b\u9762\uff0c\u6027\u80fd\u66f4\u597d")),(0,i.kt)("h2",{id:"\u65b9\u5f0f\u4e00\u5b9e\u65f6\u66f4\u65b0\u5750\u6807"},"\u65b9\u5f0f\u4e00\uff1a\u5b9e\u65f6\u66f4\u65b0\u5750\u6807"),(0,i.kt)("h2",{id:"\u9ed8\u8ba4\u6c34\u5e73\u65b9\u5411"},"\u9ed8\u8ba4\u6c34\u5e73\u65b9\u5411"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n// \u53d8\u91cf\nconst SPEED = 50;\n\nclass Swiper {\n  constructor(element, option) {\n    this.el = element && document.getElementsByClassName(element)[0];\n    // \u9ed8\u8ba4\u53c2\u6570:\u68c0\u67e5\u662f\u5426\u4f20\u4e86\u53c2\u6570\uff0c\u5982\u679c\u4f20\u4e86\u53c2\u6570\u5c06\u53c2\u6570\u548c\u9ed8\u8ba4\u53c2\u6570\u5408\u5e76\n    this.option = {\n      initialSlide: 0,\n      ...option,\n    };\n    this.state = {\n      slideGrid: [], // \u8f6e\u64ad\u6570\u7ec4\u7684translate\u96c6\u5408\n      initialTouch: {\n        clientX: 0,\n        clientY: 0,\n      },\n      distance: {\n        distanceX: 0,\n        distanceY: 0,\n      },\n      currentIndex: 0,\n    };\n    // \u6267\u884c\u521d\u59cb\u5316\n    this.init();\n  }\n\n  init() {\n    this.eventsListen();\n    this.getData();\n    this.getAnimation();\n  }\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    swiper.el.addEventListener(\n      "touchstart",\n      this.touchStart.bind(swiper),\n      false\n    );\n    swiper.el.addEventListener("touchmove", this.touchMove.bind(swiper), false);\n    swiper.el.addEventListener("touchend", this.touchEnd.bind(swiper), false);\n  }\n  // Getter\n  getFetch() {}\n  getData() {\n    this.getSlideGrid();\n  }\n  getNode() {}\n  getStyle() {}\n  getAnimation() {\n    const swiper = this;\n    const el = swiper.el;\n\n    el.style.transition = "all 0.5s ease";\n  }\n  // Method\n  touchStart(e) {\n    e.stopPropagation();\n    const swiper = this;\n    const { clientY, clientX } = e.touches[0];\n\n    swiper.state.initialTouch = { clientX, clientY };\n  }\n  // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n  calculateDistance = (touch) => {\n    const { initialTouch } = this.state;\n\n    return {\n      distanceY: touch.clientY - initialTouch.clientY,\n      distanceX: touch.clientX - initialTouch.clientX,\n    };\n  };\n  touchMove(e) {\n    e.stopPropagation();\n    const swiper = this;\n    const { distanceX, distanceY } = this.calculateDistance(e.touches[0]);\n\n    swiper.state.distance = { distanceX, distanceY };\n  }\n  touchEnd(e) {\n    e.stopPropagation();\n    const swiper = this;\n    const {\n      distance: { distanceX },\n      currentIndex,\n    } = swiper.state;\n\n    if (distanceX > 0) {\n      swiper.state.currentIndex = currentIndex - 1;\n    } else if (distanceX < 0) {\n      swiper.state.currentIndex = currentIndex + 1;\n    }\n\n    this.doTranslate(swiper.state.currentIndex);\n  }\n  // \u83b7\u53d6\u6240\u6709\u8f6e\u64ad\u7684translate\u503c \u5e76\u4fdd\u5b58\u5230\u6570\u7ec4  \u6240\u6709\u7684\u8f6e\u64ad\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\n  getSlideGrid() {\n    const swiper = this;\n\n    const slideChildNodes = this.el.childNodes;\n    const arr = [];\n\n    for (let i = 0; i < slideChildNodes.length; i++) {\n      arr.push(slideChildNodes[i].offsetLeft);\n    }\n    swiper.state.slideGrid = arr;\n  }\n  // \u6267\u884c\u52a8\u753b\n  doTranslate(index) {\n    const swiper = this;\n    const el = swiper.el;\n    const { slideGrid } = swiper.state;\n\n    el.style.transform = `translate3d(-${slideGrid[index]}px, 0px,0px)`;\n  }\n  // Render\n  render() {}\n}\nexport default Swiper;\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const initSwiper = {\n  initialSlide: 0,\n};\n\nlet swiper = new Swiper("swiper-wrapper", initSwiper);\n\n<div className="swiper-wrapper">\n  <div>0</div>\n  <div>1</div>\n  <div>2</div>\n</div>;\n')),(0,i.kt)("h2",{id:"\u6dfb\u52a0\u5782\u76f4\u65b9\u5411"},"\u6dfb\u52a0\u5782\u76f4\u65b9\u5411"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n// \u53d8\u91cf\nconst distanceToRefresh = 50;\n\nclass Swiper {\n  constructor(element, option) {\n    this.el = element && document.getElementsByClassName(element)[0];\n    // \u9ed8\u8ba4\u53c2\u6570:\u68c0\u67e5\u662f\u5426\u4f20\u4e86\u53c2\u6570\uff0c\u5982\u679c\u4f20\u4e86\u53c2\u6570\u5c06\u53c2\u6570\u548c\u9ed8\u8ba4\u53c2\u6570\u5408\u5e76\n    this.option = {\n      direction: "horizontal", // \u6c34\u5e73\u65b9\u5411horizontal \u5782\u76f4\u65b9\u5411vertical\n      initialSlide: 0,\n      ...option,\n    };\n    this.state = {\n      slideGrid: [], // \u8f6e\u64ad\u6570\u7ec4\u7684translate\u96c6\u5408\n      initialTouch: {\n        clientX: 0,\n        clientY: 0,\n      },\n      distance: {\n        distanceX: 0,\n        distanceY: 0,\n      },\n      currentIndex: 0,\n    };\n    // \u6267\u884c\u521d\u59cb\u5316\n    this.init();\n  }\n\n  init() {\n    const swiper = this;\n\n    this.eventsListen();\n    this.getData();\n    this.getAnimation();\n  }\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    swiper.el.addEventListener(\n      "touchstart",\n      this.touchStart.bind(swiper),\n      false\n    );\n    swiper.el.addEventListener("touchmove", this.touchMove.bind(swiper), false);\n    swiper.el.addEventListener("touchend", this.touchEnd.bind(swiper), false);\n  }\n  // Getter\n  getFetch() {}\n  getData() {\n    this.getSlideGrid();\n  }\n  getNode() {}\n  getStyle() {}\n  getAnimation() {\n    const swiper = this;\n    const el = swiper.el;\n\n    el.style.transition = "all 0.5s ease";\n  }\n  // Method\n  touchStart(e) {\n    e.stopPropagation();\n    const swiper = this;\n    const { clientY, clientX } = e.touches[0];\n\n    swiper.state.initialTouch = { clientX, clientY };\n  }\n  // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n  calculateDistance = (touch) => {\n    const { initialTouch } = this.state;\n\n    return {\n      distanceY: touch.clientY - initialTouch.clientY,\n      distanceX: touch.clientX - initialTouch.clientX,\n    };\n  };\n  touchMove(e) {\n    e.stopPropagation();\n    const swiper = this;\n    const { distanceX, distanceY } = this.calculateDistance(e.touches[0]);\n\n    swiper.state.distance = { distanceX, distanceY };\n  }\n  touchEnd(e) {\n    e.stopPropagation();\n    const swiper = this;\n    const { direction } = swiper.option;\n    const {\n      distance: { distanceX, distanceY },\n      currentIndex,\n      slideGrid,\n    } = swiper.state;\n\n    if (direction === "horizontal") {\n      if (distanceX > 0) {\n        swiper.state.currentIndex = currentIndex - 1 < 0 ? 0 : currentIndex - 1;\n      } else if (distanceX < 0) {\n        swiper.state.currentIndex =\n          currentIndex + 1 < slideGrid.length\n            ? currentIndex + 1\n            : slideGrid.length - 1;\n      }\n    }\n\n    if (direction === "vertical") {\n      if (distanceY > 0) {\n        swiper.state.currentIndex = currentIndex - 1 < 0 ? 0 : currentIndex - 1;\n      } else if (distanceY < 0) {\n        swiper.state.currentIndex =\n          currentIndex + 1 < slideGrid.length\n            ? currentIndex + 1\n            : slideGrid.length - 1;\n      }\n    }\n\n    this.doTranslate(swiper.state.currentIndex);\n  }\n  // \u83b7\u53d6\u6240\u6709\u8f6e\u64ad\u7684translate\u503c \u5e76\u4fdd\u5b58\u5230\u6570\u7ec4  \u6240\u6709\u7684\u8f6e\u64ad\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\n  getSlideGrid() {\n    const swiper = this;\n\n    const slideChildNodes = this.el.childNodes;\n    const arr = [];\n\n    for (let i = 0; i < slideChildNodes.length; i++) {\n      arr.push({\n        translateX: slideChildNodes[i].offsetLeft,\n        translatY: slideChildNodes[i].offsetTop,\n      });\n    }\n    swiper.state.slideGrid = arr;\n  }\n  // \u6267\u884c\u52a8\u753b\n  doTranslate(index) {\n    const swiper = this;\n    const {\n      el,\n      option: { direction },\n      state: { slideGrid },\n    } = swiper;\n\n    if (direction === "horizontal") {\n      const { translateX } = slideGrid[index];\n\n      el.style.transform = `translate3d(-${translateX}px, 0px,0px)`;\n    } else {\n      const { translatY } = slideGrid[index];\n\n      el.style.transform = `translate3d(0px,-${translatY}px,0px)`;\n    }\n  }\n  // Render\n  render() {}\n}\n\nexport default Swiper;\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const initSwiper = {\n  direction: "horizontal", // \u6c34\u5e73\u65b9\u5411horizontal \u5782\u76f4\u65b9\u5411vertical\n  initialSlide: 0,\n};\n\nlet swiper = new Swiper("swiper-wrapper", initSwiper);\n\n<div className="swiper-wrapper">\n  <div>0</div>\n  <div>1</div>\n  <div>2</div>\n</div>;\n')),(0,i.kt)("h2",{id:"\u62d6\u62fd-slide"},"\u62d6\u62fd Slide"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n// \u53d8\u91cf\nconst distanceToRefresh = 30;\n\nclass Swiper {\n  constructor(element, option) {\n    this.el = element && document.getElementsByClassName(element)[0];\n    // \u9ed8\u8ba4\u53c2\u6570:\u68c0\u67e5\u662f\u5426\u4f20\u4e86\u53c2\u6570\uff0c\u5982\u679c\u4f20\u4e86\u53c2\u6570\u5c06\u53c2\u6570\u548c\u9ed8\u8ba4\u53c2\u6570\u5408\u5e76\n    this.option = {\n      direction: "horizontal", // \u6c34\u5e73\u65b9\u5411horizontal \u5782\u76f4\u65b9\u5411vertical\n      initialSlide: 0,\n      ...option,\n    };\n    this.state = {\n      touchMoved: false, // \u662f\u5426\u89e6\u6478\n      slideGrid: [], // \u8f6e\u64ad\u6570\u7ec4\u7684translate\u96c6\u5408\n      initialTouch: {\n        lastX: 0,\n        lastY: 0,\n      },\n      distance: {\n        distanceX: 0,\n        distanceY: 0,\n      },\n      currentIndex: 0,\n    };\n    // \u6267\u884c\u521d\u59cb\u5316\n    this.init();\n  }\n\n  init() {\n    const swiper = this;\n\n    this.eventsListen();\n    this.getData();\n    this.getAnimation();\n  }\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    swiper.el.addEventListener(\n      "touchstart",\n      this.touchStart.bind(swiper),\n      false\n    );\n    swiper.el.addEventListener("touchmove", this.touchMove.bind(swiper), false);\n    swiper.el.addEventListener("touchend", this.touchEnd.bind(swiper), false);\n  }\n  // Getter\n  getFetch() {}\n  getData() {\n    this.getSlideGrid();\n  }\n  getNode() {}\n  getStyle() {}\n  getAnimation() {\n    const swiper = this;\n    const el = swiper.el;\n\n    // el.style.transition = \'all 0s\';\n  }\n  // Method\n  touchStart(e) {\n    const swiper = this;\n    const { clientY, clientX } = e.touches[0];\n\n    // \u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e\n    swiper.state.initialTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchMove(e) {\n    const { clientY, clientX } = e.touches[0];\n    const swiper = this;\n    const { el } = swiper;\n\n    // \u79fb\u52a8\u8ddd\u79bb\n    const { distanceX, distanceY } = this.calculateDistance(e.touches[0]);\n\n    // \u6b63\u5219\u63d0\u53d6translate\n    const { translateX, translateY } = this.regTranlate();\n\n    // \u8d77\u59cb\u4f4d\u7f6e(\u83b7\u53d6\u6700\u65b0\u4f4d\u7f6e)\n    let lastX = translateX;\n    let lastY = translateY;\n\n    // \u8ba1\u7b97\u4f4d\u7f6e\n    let resultX = distanceX + lastX;\n    let resultY = distanceY + lastY;\n\n    this.doTranslate(resultX, resultY);\n\n    // \u66f4\u65b0\u8d77\u59cb\u4f4d\u7f6e\n    swiper.state.initialTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchEnd() {\n    const swiper = this;\n  }\n  // \u83b7\u53d6\u6240\u6709\u8f6e\u64ad\u7684translate\u503c \u5e76\u4fdd\u5b58\u5230\u6570\u7ec4  \u6240\u6709\u7684\u8f6e\u64ad\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\n  getSlideGrid() {\n    const swiper = this;\n\n    const slideChildNodes = this.el.childNodes;\n    const arr = [];\n\n    for (let i = 0; i < slideChildNodes.length; i++) {\n      arr.push({\n        translateX: slideChildNodes[i].offsetLeft,\n        translatY: slideChildNodes[i].offsetTop,\n      });\n    }\n\n    swiper.state.slideGrid = arr;\n  }\n  // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n  calculateDistance = (touch) => {\n    const { initialTouch } = this.state;\n\n    return {\n      distanceY: touch.clientY - initialTouch.lastY,\n      distanceX: touch.clientX - initialTouch.lastX,\n    };\n  };\n  // \u6b63\u5219\u63d0\u53d6translate\n  RegTranlate() {\n    const swiper = this;\n    const { el } = swiper;\n    // eslint-disable-next-line no-useless-escape\n    let reg = /(\\-|\\+)?\\d+(\\.\\d+)?px/g;\n    let str = el.style.transform;\n    let translate3d = str.match(reg);\n\n    return {\n      translateX: translate3d && translate3d[0] ? parseInt(translate3d[0]) : 0,\n      translateY: translate3d && translate3d[1] ? parseInt(translate3d[1]) : 0,\n    };\n  }\n  // \u6b63\u5219\u63d0\u53d6translate\n  regTranlate() {\n    const swiper = this;\n    const { el } = swiper;\n    // eslint-disable-next-line no-useless-escape\n    let reg = /(\\-|\\+)?\\d+(\\.\\d+)?px/g;\n    let str = el.style.transform;\n    let translate3d = str.match(reg);\n\n    return {\n      translateX: translate3d && translate3d[0] ? parseInt(translate3d[0]) : 0,\n      translateY: translate3d && translate3d[1] ? parseInt(translate3d[1]) : 0,\n    };\n  }\n\n  // \u6267\u884c\u52a8\u753b\n  doTranslate(pixelsX, pixelsY) {\n    const swiper = this;\n    const { el } = swiper;\n\n    el.style.transform = `translate3d(${pixelsX}px,0px,0px)`;\n    // el.style.transform = `translate3d(0px,${pixelsY}px,0px)`;\n  }\n\n  // Render\n  render() {}\n}\n\nexport default Swiper;\n')),(0,i.kt)("h2",{id:"\u81ea\u52a8\u6ed1\u52a8"},"\u81ea\u52a8\u6ed1\u52a8"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n// \u53d8\u91cf\nconst distanceToRefresh = 30;\n\nclass Swiper {\n  constructor(element, option) {\n    this.el = element && document.getElementsByClassName(element)[0];\n    // \u9ed8\u8ba4\u53c2\u6570:\u68c0\u67e5\u662f\u5426\u4f20\u4e86\u53c2\u6570\uff0c\u5982\u679c\u4f20\u4e86\u53c2\u6570\u5c06\u53c2\u6570\u548c\u9ed8\u8ba4\u53c2\u6570\u5408\u5e76\n    this.option = {\n      direction: "horizontal", // \u6c34\u5e73\u65b9\u5411horizontal \u5782\u76f4\u65b9\u5411vertical\n      initialSlide: 0,\n      ...option,\n    };\n    this.state = {\n      touchMoved: false, // \u662f\u5426\u89e6\u6478\n      slideGrid: [], // \u8f6e\u64ad\u6570\u7ec4\u7684translate\u96c6\u5408\n      initialTouch: {\n        lastX: 0,\n        lastY: 0,\n      },\n      distance: {\n        distanceX: 0,\n        distanceY: 0,\n      },\n      currentIndex: 0,\n    };\n    // \u6267\u884c\u521d\u59cb\u5316\n    this.init();\n  }\n\n  init() {\n    const swiper = this;\n\n    this.eventsListen();\n    this.getData();\n    this.getAnimation();\n  }\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    swiper.el.addEventListener(\n      "touchstart",\n      this.touchStart.bind(swiper),\n      false\n    );\n    swiper.el.addEventListener("touchmove", this.touchMove.bind(swiper), false);\n    swiper.el.addEventListener("touchend", this.touchEnd.bind(swiper), false);\n    swiper.el.addEventListener(\n      "transitionend",\n      this.transitionend.bind(swiper),\n      false\n    );\n  }\n  // Getter\n  getFetch() {}\n  getData() {\n    this.getSlideGrid();\n  }\n  getNode() {}\n  getStyle() {}\n  getAnimation() {\n    const swiper = this;\n    const el = swiper.el;\n  }\n  // Method\n  transitionend(e) {\n    const swiper = this;\n    const { el } = swiper;\n\n    el.style.transition = null;\n  }\n  touchStart(e) {\n    const swiper = this;\n    const { clientY, clientX } = e.touches[0];\n\n    // \u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e\n    swiper.state.initialTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchMove(e) {\n    const { clientY, clientX } = e.touches[0];\n    const swiper = this;\n    const { el } = swiper;\n\n    // \u79fb\u52a8\u8ddd\u79bb\n    const { distanceX, distanceY } = this.calculateDistance(e.touches[0]);\n\n    // \u6b63\u5219\u63d0\u53d6translate\n    const { translateX, translateY } = this.regTranlate();\n\n    // \u8d77\u59cb\u4f4d\u7f6e(\u83b7\u53d6\u6700\u65b0\u4f4d\u7f6e)\n    let lastX = translateX;\n    let lastY = translateY;\n\n    // \u8ba1\u7b97\u4f4d\u7f6e\n    let resultX = distanceX + lastX;\n    let resultY = distanceY + lastY;\n\n    this.doTranslate(resultX, resultY);\n\n    // \u66f4\u65b0\u8d77\u59cb\u4f4d\u7f6e\n    swiper.state.initialTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchEnd() {\n    const swiper = this;\n    const { translateX, translateY } = this.regTranlate();\n\n    this.goToSlide(translateX);\n  }\n  // \u83b7\u53d6\u6240\u6709\u8f6e\u64ad\u7684translate\u503c \u5e76\u4fdd\u5b58\u5230\u6570\u7ec4  \u6240\u6709\u7684\u8f6e\u64ad\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\n  getSlideGrid() {\n    const swiper = this;\n\n    const slideChildNodes = this.el.childNodes;\n    const arr = [];\n\n    for (let i = 0; i < slideChildNodes.length; i++) {\n      arr.push({\n        translateX: slideChildNodes[i].offsetLeft,\n        translatY: slideChildNodes[i].offsetTop,\n      });\n    }\n    console.log(arr);\n    swiper.state.slideGrid = arr;\n  }\n  // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n  calculateDistance = (touch) => {\n    const { initialTouch } = this.state;\n\n    return {\n      distanceY: parseInt(touch.clientY - initialTouch.lastY),\n      distanceX: parseInt(touch.clientX - initialTouch.lastX),\n    };\n  };\n  // \u6b63\u5219\u63d0\u53d6translate\n  regTranlate() {\n    const swiper = this;\n    const { el } = swiper;\n    // eslint-disable-next-line no-useless-escape\n    let reg = /(\\-|\\+)?\\d+(\\.\\d+)?px/g;\n    let str = el.style.transform;\n    let translate3d = str.match(reg);\n\n    return {\n      translateX: translate3d && translate3d[0] ? parseInt(translate3d[0]) : 0,\n      translateY: translate3d && translate3d[1] ? parseInt(translate3d[1]) : 0,\n    };\n  }\n  // \u8ba1\u7b97translate\u8ddd\u79bb\n  boundTranslate(distance) {\n    const swiper = this;\n    const { el } = swiper;\n\n    this.doTranslate(distance);\n  }\n  // \u6267\u884c\u52a8\u753b\n  doTranslate(pixelsX, pixelsY) {\n    const swiper = this;\n    const { el } = swiper;\n\n    el.style.transform = `translate3d(${pixelsX}px,0px,0px)`;\n    // el.style.transform = `translate3d(0px,${pixelsY}px,0px)`;\n  }\n  goToSlide(translateX) {\n    const swiper = this;\n    const {\n      el,\n      option: { direction },\n      state: { slideGrid },\n    } = swiper;\n\n    // \u8bbe\u7f6e\u8fb9\u754c\n    const leftBounde = translateX > 0;\n    const rightBounde = Math.abs(translateX) > el.scrollWidth - el.clientWidth; // \u51cf\u53bb\u81ea\u8eab\u4e00\u4e2a\n\n    if (leftBounde) {\n      el.style.transition = "all .3s";\n      el.style.transform = "translate3d(0px,0px,0px)";\n    }\n    if (rightBounde) {\n      el.style.transition = "all .3s";\n      el.style.transform = `translate3d(-${\n        el.scrollWidth - el.clientWidth\n      }px,0px,0px)`;\n    }\n  }\n  // Render\n  render() {}\n}\n\nexport default Swiper;\n')),(0,i.kt)("h2",{id:"\u81ea\u52a8\u6eda\u52a8\u4e0b\u4e00\u9875"},"\u81ea\u52a8\u6eda\u52a8\u4e0b\u4e00\u9875"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n// \u53d8\u91cf:\u6700\u5927\u62c9\u4f38\u8ddd\u79bb\nconst distanceMaximum = 30;\n\nclass Swiper {\n  constructor(element, option) {\n    this.el = element && document.getElementsByClassName(element)[0];\n    this.option = {\n      direction: "horizontal", // \u6c34\u5e73\u65b9\u5411horizontal/\u5782\u76f4\u65b9\u5411vertical\n      initialSlide: 0, // \u521d\u59cb\u9875\n      ...option, // \u9ed8\u8ba4\u53c2\u6570:\u68c0\u67e5\u662f\u5426\u4f20\u4e86\u53c2\u6570\uff0c\u5982\u679c\u4f20\u4e86\u53c2\u6570\u5c06\u53c2\u6570\u548c\u9ed8\u8ba4\u53c2\u6570\u5408\u5e76\n    };\n    this.state = {\n      touchMoved: false, // \u662f\u5426\u79fb\u52a8\u7ed3\u675f\n      slideGrid: [], // \u8f6e\u64ad\u6570\u7ec4\u7684translate\u96c6\u5408\n      initialTouch: {\n        // \u5224\u65ad\u65b9\u5411\n        initX: 0,\n        initY: 0,\n      },\n      lastTouch: {\n        // \u8bb0\u5f55\u4e0a\u6b21\n        lastX: 0,\n        lastY: 0,\n      },\n      distance: {\n        // \u79fb\u52a8\u8ddd\u79bb\n        distanceX: 0,\n        distanceY: 0,\n      },\n      currentIndex: 0, // \u5f53\u524d\u9875\u9762\n    };\n    // \u6267\u884c\u521d\u59cb\u5316\n    this.init();\n  }\n\n  init() {\n    const swiper = this;\n\n    this.eventsListen();\n    this.getData();\n    this.getAnimation();\n  }\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    swiper.el.addEventListener(\n      "touchstart",\n      this.touchStart.bind(swiper),\n      false\n    );\n    swiper.el.addEventListener("touchmove", this.touchMove.bind(swiper), false);\n    swiper.el.addEventListener("touchend", this.touchEnd.bind(swiper), false);\n    swiper.el.addEventListener(\n      "transitionend",\n      this.transitionend.bind(swiper),\n      false\n    );\n  }\n  // Getter\n  getFetch() {}\n  getData() {\n    this.getSlideGrid();\n  }\n  getNode() {}\n  getStyle() {}\n  getAnimation() {\n    const swiper = this;\n    const el = swiper.el;\n  }\n  // Method\n  transitionend(e) {\n    const swiper = this;\n    const { el } = swiper;\n\n    el.style.transition = null;\n  }\n  touchStart(e) {\n    const swiper = this;\n    const { clientY, clientX } = e.touches[0];\n\n    // \u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e\n    swiper.state.initialTouch = { initX: clientX, initY: clientY };\n    // \u8bbe\u7f6e\u4e0a\u4e00\u6b21\u4f4d\u7f6e\n    swiper.state.lastTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchMove(e) {\n    const { clientY, clientX } = e.touches[0];\n    const swiper = this;\n    const { el } = swiper;\n\n    // \u79fb\u52a8\u8ddd\u79bb\n    const { distanceX, distanceY } = this.calculateDistance(e.touches[0]);\n\n    // \u6b63\u5219\u63d0\u53d6translate\n    const { translateX, translateY } = this.regTranlate();\n\n    // \u8d77\u59cb\u4f4d\u7f6e(\u83b7\u53d6\u6700\u65b0\u4f4d\u7f6e)\n    let lastX = translateX;\n    let lastY = translateY;\n\n    // \u8ba1\u7b97\u4f4d\u7f6e\n    let resultX = distanceX + lastX;\n    let resultY = distanceY + lastY;\n\n    this.doTranslate(resultX, resultY);\n\n    // \u66f4\u65b0\u8d77\u59cb\u4f4d\u7f6e\n    swiper.state.lastTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchEnd() {\n    const swiper = this;\n\n    this.setBound();\n    this.goToSlide();\n  }\n  // \u83b7\u53d6\u6240\u6709\u8f6e\u64ad\u7684translate\u503c \u5e76\u4fdd\u5b58\u5230\u6570\u7ec4  \u6240\u6709\u7684\u8f6e\u64ad\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\n  getSlideGrid() {\n    const swiper = this;\n\n    const slideChildNodes = this.el.childNodes;\n    const arr = [];\n\n    for (let i = 0; i < slideChildNodes.length; i++) {\n      arr.push({\n        translateX: slideChildNodes[i].offsetLeft,\n        translatY: slideChildNodes[i].offsetTop,\n      });\n    }\n\n    swiper.state.slideGrid = arr;\n  }\n  // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n  calculateDistance = (touch) => {\n    const { lastTouch } = this.state;\n\n    return {\n      distanceY: parseInt(touch.clientY - lastTouch.lastY),\n      distanceX: parseInt(touch.clientX - lastTouch.lastX),\n    };\n  };\n  // \u6b63\u5219\u63d0\u53d6translate\n  regTranlate() {\n    const swiper = this;\n    const { el } = swiper;\n    // eslint-disable-next-line no-useless-escape\n    let reg = /(\\-|\\+)?\\d+(\\.\\d+)?px/g;\n    let str = el.style.transform;\n    let translate3d = str.match(reg);\n\n    return {\n      translateX: translate3d && translate3d[0] ? parseInt(translate3d[0]) : 0,\n      translateY: translate3d && translate3d[1] ? parseInt(translate3d[1]) : 0,\n    };\n  }\n  // \u6267\u884c\u52a8\u753b\n  doTranslate(pixelsX, pixelsY) {\n    const swiper = this;\n    const { el } = swiper;\n\n    el.style.transform = `translate3d(${pixelsX}px,0px,0px)`;\n    // el.style.transform = `translate3d(0px,${pixelsY}px,0px)`;\n  }\n  setBound() {\n    const swiper = this;\n    const { el } = swiper;\n\n    const { translateX, translateY } = this.regTranlate();\n\n    // \u8bbe\u7f6e\u8fb9\u754c\n    const leftBounde = translateX > 0;\n    const rightBounde = Math.abs(translateX) > el.scrollWidth - el.clientWidth; // \u51cf\u53bb\u81ea\u8eab\u4e00\u4e2a\n\n    if (leftBounde) {\n      el.style.transition = "all .5s";\n      el.style.transform = "translate3d(0px,0px,0px)";\n    }\n    if (rightBounde) {\n      el.style.transition = "all .5s";\n      el.style.transform = `translate3d(-${\n        el.scrollWidth - el.clientWidth\n      }px,0px,0px)`;\n    }\n  }\n  goToSlide() {\n    const swiper = this;\n    let {\n      el,\n      state: {\n        slideGrid,\n        initialTouch: { initX },\n        lastTouch: { lastX },\n        currentIndex,\n      },\n    } = swiper;\n\n    // \u5224\u65ad\u65b9\u5411\n    if (lastX > initX && currentIndex > 0) {\n      currentIndex -= 1;\n    } else if (lastX < initX && currentIndex < slideGrid.length - 1) {\n      currentIndex += 1;\n    }\n\n    const { translateX } = slideGrid[currentIndex];\n\n    el.style.transition = "all .5s";\n    el.style.transform = `translate3d(-${translateX}px,0px,0px)`;\n    swiper.state.currentIndex = currentIndex;\n  }\n  // Render\n  render() {}\n}\n\nexport default Swiper;\n')),(0,i.kt)("h2",{id:"\u91cd\u6784"},"\u91cd\u6784"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n// \u6700\u5927\u62c9\u4f38\u9608\u503c\nconst maxStretch = 100;\n// \u6ed1\u52a8\u5207\u6362\u7684\u9608\u503c\nconst maxSlide = 50;\n\nclass Swiper {\n  constructor(element, option) {\n    this.el = element && document.getElementsByClassName(element)[0];\n    this.option = {\n      direction: "horizontal", // \u6c34\u5e73\u65b9\u5411horizontal/\u5782\u76f4\u65b9\u5411vertical\n      initialSlide: 0, // \u521d\u59cb\u9875\n      ...option, // \u9ed8\u8ba4\u53c2\u6570:\u68c0\u67e5\u662f\u5426\u4f20\u4e86\u53c2\u6570\uff0c\u5982\u679c\u4f20\u4e86\u53c2\u6570\u5c06\u53c2\u6570\u548c\u9ed8\u8ba4\u53c2\u6570\u5408\u5e76\n    };\n    this.state = {\n      slideGrid: [], // \u8f6e\u64ad\u6570\u7ec4\u7684translate\u96c6\u5408\n      initTouch: {\n        initX: 0,\n        initY: 0,\n      },\n      lastTouch: {\n        // \u5b9e\u65f6\u66f4\u65b0\u5730\u5740\n        lastX: 0,\n        lastY: 0,\n      },\n      distance: {\n        // \u79fb\u52a8\u8ddd\u79bb\n        distanceX: 0,\n        distanceY: 0,\n      },\n      currentIndex: 0, // \u5f53\u524d\u9875\u9762\n    };\n    // \u6267\u884c\u521d\u59cb\u5316\n    this.init();\n  }\n  init() {\n    const swiper = this;\n\n    this.getNode();\n    this.getData();\n    this.eventsListen();\n    this.setAnimation();\n    this.mount();\n  }\n\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    this.el.addEventListener("touchstart", this.touchStart.bind(swiper), false);\n    this.el.addEventListener("touchmove", this.touchMove.bind(swiper), false);\n    this.el.addEventListener("touchend", this.touchEnd.bind(swiper), false);\n    this.el.addEventListener(\n      "transitionend",\n      this.transitionend.bind(swiper),\n      false\n    );\n  }\n\n  // Getter\n  getData() {\n    this.getSlideGrid();\n  }\n  getNode() {}\n  // Setter\n  setAnimation() {}\n\n  // Method\n  touchStart(e) {\n    e.preventDefault();\n    const swiper = this;\n    const { clientY, clientX } = e.touches[0];\n\n    // \u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e(\u7528\u4f5c\u6bd4\u8f83)\n    this.state.initTouch = { initX: clientX, initY: clientY };\n    // \u8bbe\u7f6e\u4e0a\u4e00\u6b21\u4f4d\u7f6e\n    this.state.lastTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchMove(e) {\n    e.preventDefault();\n    const { clientX, clientY } = e.touches[0];\n    const firstX = clientX;\n    const swiper = this;\n    const {\n      state: {\n        currentIndex,\n        initTouch: { initX },\n      },\n    } = this;\n    // \u79fb\u52a8\u8ddd\u79bb\n    const { distanceX, distanceY } = this.calculateDistance(e.touches[0]);\n\n    // \u83b7\u53d6\u6700\u65b0\u4f4d\u7f6e\uff1a\u6b63\u5219\u63d0\u53d6translate\n    const { lastX, lastY } = this.regTranlate();\n\n    // \u8ba1\u7b97\u4f4d\u7f6e\n    let resultX = distanceX + lastX;\n    let resultY = distanceY + lastY;\n\n    // \u6700\u5927\u9650\u5ea6\n    if (Math.abs(clientX - initX) > maxStretch) {\n      console.log("\u8d85\u51fa\u6700\u5927\u9650\u5ea6");\n\n      return;\n    }\n\n    // \u79fb\u52a8\n    this.doTranslate(resultX, resultY);\n\n    // \u66f4\u65b0\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4e0b\u4e00\u6b21\u79fb\u52a8\u5c31\u4ece\u5f53\u524d\u4f4d\u7f6e\u8ba1\u7b97\n    swiper.state.lastTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchEnd(e) {\n    e.preventDefault();\n    this.goToSlide();\n  }\n  transitionend(e) {\n    const swiper = this;\n    const { el } = this;\n\n    // \u6e05\u9664\u8fc7\u6e21\u52a8\u753b\n    el.style.transition = null;\n  }\n\n  // \u83b7\u53d6\u6240\u6709\u8f6e\u64ad\u7684translate\u503c \u5e76\u4fdd\u5b58\u5230\u6570\u7ec4  \u6240\u6709\u7684\u8f6e\u64ad\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\n  getSlideGrid() {\n    const swiper = this;\n\n    const slideChildNodes = this.el.childNodes;\n    const arr = [];\n\n    for (let i = 0; i < slideChildNodes.length; i++) {\n      arr.push({\n        translateX: slideChildNodes[i].offsetLeft,\n        translatY: slideChildNodes[i].offsetTop,\n      });\n    }\n\n    this.state.slideGrid = arr;\n  }\n  // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n  calculateDistance = (touch) => {\n    const { lastTouch } = this.state;\n\n    const distanceX = touch.clientX - lastTouch.lastX;\n    const distanceY = touch.clientY - lastTouch.lastY;\n\n    return {\n      distanceX: parseInt(distanceX),\n      distanceY: parseInt(distanceY),\n    };\n  };\n  // \u6b63\u5219\u63d0\u53d6translate\n  regTranlate() {\n    const swiper = this;\n    const { el } = this;\n    // eslint-disable-next-line no-useless-escape\n    let reg = /(\\-|\\+)?\\d+(\\.\\d+)?px/g;\n    let str = el.style.transform;\n    let translate = str.match(reg);\n\n    return {\n      lastX: translate && translate[0] ? parseInt(translate[0]) : 0,\n      lastY: translate && translate[1] ? parseInt(translate[1]) : 0,\n    };\n  }\n  // \u8fdb\u884c\u79fb\u52a8\n  doTranslate(pixelsX, pixelsY) {\n    const swiper = this;\n    const { el } = this;\n\n    const translate = `translate(${pixelsX}px,0px)`;\n\n    el.style.cssText = `\n        -moz-transform:${translate};\n        -ms-transform:${translate};\n        -o-transform:${translate};\n        -webkit-transform:${translate};\n        transform:${translate};\n        `;\n  }\n  // \u6267\u884cpage\u52a8\u753b\n  goToSlide() {\n    const swiper = this;\n    let {\n      el,\n      state: {\n        slideGrid,\n        initTouch: { initX },\n        lastTouch: { lastX },\n        currentIndex,\n      },\n    } = this;\n\n    // \u6700\u5927slide\u8bc6\u522b\u8ddd\u79bb\n    if (Math.abs(lastX - initX) < maxSlide) {\n      const { translateX } = slideGrid[currentIndex];\n\n      const translate = `translate(-${translateX}px,0px)`;\n\n      el.style.cssText = `\n            transition:transform 600ms;\n            -moz-transform:${translate};\n            -ms-transform:${translate};\n            -o-transform:${translate};\n            -webkit-transform:${translate};\n            transform:${translate};\n            `;\n\n      return;\n    }\n\n    // \u5224\u65ad\u65b9\u5411\n    if (lastX > initX && currentIndex > 0) {\n      currentIndex -= 1;\n    } else if (lastX < initX && currentIndex < slideGrid.length - 1) {\n      currentIndex += 1;\n    }\n\n    const { translateX } = slideGrid[currentIndex];\n\n    const translate = `translate(-${translateX}px,0px)`;\n\n    el.style.cssText = `\n        transition:transform 300ms;\n        -moz-transform:${translate};\n        -ms-transform:${translate};\n        -o-transform:${translate};\n        -webkit-transform:${translate};\n        transform:${translate};\n        `;\n\n    // el.style.transition = \'transform 600ms\';\n    // el.style.transform = `translate(-${translateX}px,0px)`;\n\n    this.state.currentIndex = currentIndex;\n  }\n  // Mount\n  mount() {\n    window.Swiper = this;\n  }\n}\n\nexport default Swiper;\n')),(0,i.kt)("h2",{id:"\u65b9\u5f0f\u4e8c\u5b9e\u65f6\u66f4\u65b0\u8ddd\u79bb"},"\u65b9\u5f0f\u4e8c\uff1a\u5b9e\u65f6\u66f4\u65b0\u8ddd\u79bb"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n\nclass Swiper {\n  constructor(element) {\n    this.swiperWrapper = document.getElementsByClassName(element)[0];\n    this.swiperContainer = this.swiperWrapper.childNodes[0];\n\n    this.state = {\n      start: 0, // \u89e6\u6478\u8d77\u59cb\u70b9\n      moveDistance: 0, // \u6ed1\u52a8\u8ddd\u79bb\n      isMoved: false, // \u6807\u8bb0\u662f\u5426\u79fb\u52a8\u8fc7\n      lastMove: 0,\n      moveX: 0,\n      currntItemIndex: 0, // \u5f53\u524d\u662f\u7b2c\u51e0\u4e2aitem\n    };\n    this.init();\n  }\n  init() {\n    this.eventsListen();\n    this.setStyle();\n    this.createIndicator();\n    this.mount();\n  }\n\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    this.swiperContainer.addEventListener(\n      "touchstart",\n      this.touchStart.bind(swiper),\n      false\n    );\n    this.swiperContainer.addEventListener(\n      "touchmove",\n      this.touchMove.bind(swiper),\n      false\n    );\n    this.swiperContainer.addEventListener(\n      "touchend",\n      this.touchEnd.bind(swiper),\n      false\n    );\n  }\n  // Getter\n  getData() {}\n  getNode() {}\n  // Setter\n  setStyle() {\n    this.swiperWrapper = document.getElementsByClassName("swiper-wrapper")[0]; // swiper\u5bb9\u5668\n    const width = window.innerWidth;\n\n    this.swiperWrapper.style.width = `${width}px`;\n  }\n\n  // Method\n  touchStart(e) {\n    const swiper = this;\n    const {\n      state: { moveX },\n    } = this;\n    const { clientX } = e.touches[0];\n\n    this.state.start = clientX;\n    // \u62ff\u5230\u4e0a\u6b21\u6ed1\u52a8\u7684\u8ddd\u79bb\uff08\u6bcf\u6b21\u56fa\u5b9a\uff09\n    this.state.lastMove = moveX;\n  }\n  touchMove(e) {\n    const swiper = this;\n    const {\n      state: { start, isMoved, lastMove },\n    } = this;\n    const { clientX } = e.touches[0];\n\n    // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n    let distanceX = clientX - start;\n\n    // \u91cd\u65b0\u8bbe\u7f6e\u6ed1\u52a8\u7684\u8ddd\u79bb\n    let resultX = isMoved ? lastMove + distanceX : distanceX;\n\n    this.swiperContainer.style = `transform: translateX(${resultX}px)`;\n\n    // \u66f4\u65b0\u79fb\u52a8\u4f4d\u7f6e\n    this.state.moveX = resultX;\n\n    // \u6807\u8bb0\u5df2\u7ecf\u6ed1\u52a8\n    this.state.isMoved = true;\n\n    // \u66f4\u65b0\u79fb\u52a8\u8ddd\u79bb\n    this.state.moveDistance = distanceX;\n  }\n  touchEnd(e) {\n    const swiper = this;\n    const {\n      state: { moveX, moveDistance, currntItemIndex },\n    } = this;\n\n    let result = moveX;\n    let rightBound = -`${\n      this.swiperContainer.scrollWidth - this.swiperContainer.clientWidth\n    }`;\n    let childLength = this.swiperContainer.childNodes.length - 1;\n\n    // \u5904\u7406\u5de6\u8fb9\u754c\n    if (moveX > 0) {\n      result = 0;\n    }\n    // \u5904\u7406\u53f3\u8fb9\u754c\n    if (moveX < rightBound) {\n      result = rightBound;\n    }\n\n    // \u5904\u7406\u4e2d\u95f4swiper-item\u7684\u8fb9\u754c\n    if (moveDistance > 0) {\n      // \u4ece\u5de6\u5f80\u53f3\u6ed1\u52a8\uff08\u2192\uff09\n      if (\n        moveX > -(this.swiperContainer.clientWidth * currntItemIndex) + 50 &&\n        currntItemIndex > 0\n      ) {\n        // \u6ed1\u5230\u4e0a\u4e00\u4e2aswiper-item\n        result = -(this.swiperContainer.clientWidth * (currntItemIndex - 1));\n      } else {\n        // \u505c\u7559\u5728\u5f53\u524dswiper-item\n        result = -(this.swiperContainer.clientWidth * currntItemIndex);\n      }\n    } else if (moveDistance < 0) {\n      // \u4ece\u53f3\u5f80\u5de6\u6ed1\u52a8\uff08\u2190\uff09\n      if (\n        moveX < -(this.swiperContainer.clientWidth * currntItemIndex) - 50 &&\n        currntItemIndex < childLength\n      ) {\n        // \u6ed1\u5230\u4e0b\u4e00\u4e2aswiper-item\n        result = -(this.swiperContainer.clientWidth * (currntItemIndex + 1));\n      } else {\n        // \u505c\u7559\u5728\u5f53\u524dswiper-item\n        result = -(this.swiperContainer.clientWidth * currntItemIndex);\n      }\n    }\n\n    // \u66f4\u65b0\u6837\u5f0f\n    this.swiperContainer.style = `transform: translateX(${result}px);transition: transform 600ms`;\n\n    // \u8ba1\u7b97\u5f53\u524dindex\n    let index = Math.abs(Math.round(result / this.swiperContainer.clientWidth));\n\n    this.state.currntItemIndex = index;\n\n    // \u66f4\u65b0\u6307\u793a\u70b9\n    let dots = document.getElementsByClassName("dot");\n\n    for (let i = 0; i < dots.length; i++) {\n      dots[i].setAttribute("class", `dot ${index === i ? "dot-active" : ""}`);\n    }\n\n    // \u66f4\u65b0\u79fb\u52a8\n    this.state.moveX = result;\n\n    // \u6ed1\u52a8\u8ddd\u79bb\u6062\u590d\u4e3a0\n    this.state.moveDistance = 0;\n  }\n\n  // \u6307\u793a\u5668\n  createIndicator() {\n    const swiper = this;\n    const {\n      state: { currntItemIndex },\n    } = this;\n    let dotWrap = document.createElement("div");\n    let dot = document.createElement("span");\n\n    // clas\u7c7b\u540d\n    dotWrap.setAttribute("class", "indicator-wrapper");\n\n    // // style\u6837\u5f0f\n    // dotWrap.style.cssText = `\n    // width:100px;\n    // height:100px;\n    // `;\n\n    const length = this.swiperContainer.childNodes.length;\n\n    for (let i = 0; i < length; i++) {\n      dot.setAttribute(\n        "class",\n        `dot ${currntItemIndex === i ? "dot-active" : ""}`\n      );\n      dotWrap.appendChild(dot.cloneNode(true));\n    }\n\n    this.swiperWrapper.appendChild(dotWrap.cloneNode(true));\n  }\n  // Mount\n  mount() {\n    window.Swiper = this;\n  }\n}\n\nexport default Swiper;\n')),(0,i.kt)("h2",{id:"\u6700\u65b0\u7248translate"},"\u6700\u65b0\u7248\uff08translate\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n// \u6700\u5927\u62c9\u4f38\u9608\u503c\nconst maxStretch = 100;\n// \u6ed1\u52a8\u5207\u6362\u7684\u9608\u503c\nconst maxSlide = 50;\n\nclass Swiper {\n  constructor(element, option) {\n    this.el = element && document.getElementsByClassName(element)[0];\n    this.option = {\n      direction: "horizontal", // \u6c34\u5e73\u65b9\u5411horizontal/\u5782\u76f4\u65b9\u5411vertical\n      initialSlide: 0, // \u521d\u59cb\u9875\n      ...option, // \u9ed8\u8ba4\u53c2\u6570:\u68c0\u67e5\u662f\u5426\u4f20\u4e86\u53c2\u6570\uff0c\u5982\u679c\u4f20\u4e86\u53c2\u6570\u5c06\u53c2\u6570\u548c\u9ed8\u8ba4\u53c2\u6570\u5408\u5e76\n    };\n    this.state = {\n      slideGrid: [], // \u8f6e\u64ad\u6570\u7ec4\u7684translate\u96c6\u5408\n      initTouch: {\n        initX: 0,\n        initY: 0,\n      },\n      lastTouch: {\n        // \u5b9e\u65f6\u66f4\u65b0\u5730\u5740\n        lastX: 0,\n        lastY: 0,\n      },\n      distance: {\n        // \u79fb\u52a8\u8ddd\u79bb\n        distanceX: 0,\n        distanceY: 0,\n      },\n      currentIndex: 0, // \u5f53\u524d\u9875\u9762\n    };\n    // \u6267\u884c\u521d\u59cb\u5316\n    this.init();\n  }\n  init() {\n    const swiper = this;\n\n    this.getNode();\n    this.getData();\n    this.eventsListen();\n    this.setAnimation();\n    this.mount();\n  }\n\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    this.el.addEventListener("touchstart", this.touchStart.bind(swiper), false);\n    this.el.addEventListener("touchmove", this.touchMove.bind(swiper), false);\n    this.el.addEventListener("touchend", this.touchEnd.bind(swiper), false);\n    this.el.addEventListener(\n      "transitionend",\n      this.transitionend.bind(swiper),\n      false\n    );\n  }\n\n  // Getter\n  getData() {\n    this.getSlideGrid();\n  }\n  getNode() {}\n  // Setter\n  setAnimation() {}\n\n  // Method\n  touchStart(e) {\n    e.preventDefault();\n    const swiper = this;\n    const { clientY, clientX } = e.touches[0];\n\n    // \u8bbe\u7f6e\u521d\u59cb\u4f4d\u7f6e(\u7528\u4f5c\u6bd4\u8f83)\n    this.state.initTouch = { initX: clientX, initY: clientY };\n    // \u8bbe\u7f6e\u4e0a\u4e00\u6b21\u4f4d\u7f6e\n    this.state.lastTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchMove(e) {\n    e.preventDefault();\n    const { clientX, clientY } = e.touches[0];\n    const firstX = clientX;\n    const swiper = this;\n    const {\n      state: {\n        currentIndex,\n        initTouch: { initX },\n      },\n    } = this;\n    // \u79fb\u52a8\u8ddd\u79bb\n    const { distanceX, distanceY } = this.calculateDistance(e.touches[0]);\n\n    // \u83b7\u53d6\u6700\u65b0\u4f4d\u7f6e\uff1a\u6b63\u5219\u63d0\u53d6translate\n    const { lastX, lastY } = this.regTranlate();\n\n    // \u8ba1\u7b97\u4f4d\u7f6e\n    let resultX = distanceX + lastX;\n    let resultY = distanceY + lastY;\n\n    // \u6700\u5927\u9650\u5ea6\n    if (Math.abs(clientX - initX) > maxStretch) {\n      console.log("\u8d85\u51fa\u6700\u5927\u9650\u5ea6");\n\n      return;\n    }\n\n    // \u79fb\u52a8\n    this.doTranslate(resultX, resultY);\n\n    // \u66f4\u65b0\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4e0b\u4e00\u6b21\u79fb\u52a8\u5c31\u4ece\u5f53\u524d\u4f4d\u7f6e\u8ba1\u7b97\n    swiper.state.lastTouch = { lastX: clientX, lastY: clientY };\n  }\n  touchEnd(e) {\n    e.preventDefault();\n    this.goToSlide();\n  }\n  transitionend(e) {\n    const swiper = this;\n    const { el } = this;\n\n    // \u6e05\u9664\u8fc7\u6e21\u52a8\u753b\n    el.style.transition = null;\n  }\n\n  // \u83b7\u53d6\u6240\u6709\u8f6e\u64ad\u7684translate\u503c \u5e76\u4fdd\u5b58\u5230\u6570\u7ec4  \u6240\u6709\u7684\u8f6e\u64ad\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\n  getSlideGrid() {\n    const swiper = this;\n\n    const slideChildNodes = this.el.childNodes;\n    const arr = [];\n\n    for (let i = 0; i < slideChildNodes.length; i++) {\n      arr.push({\n        translateX: slideChildNodes[i].offsetLeft,\n        translatY: slideChildNodes[i].offsetTop,\n      });\n    }\n\n    this.state.slideGrid = arr;\n  }\n  // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n  calculateDistance = (touch) => {\n    const { lastTouch } = this.state;\n\n    const distanceX = touch.clientX - lastTouch.lastX;\n    const distanceY = touch.clientY - lastTouch.lastY;\n\n    return {\n      distanceX: parseInt(distanceX),\n      distanceY: parseInt(distanceY),\n    };\n  };\n  // \u6b63\u5219\u63d0\u53d6translate\n  regTranlate() {\n    const swiper = this;\n    const { el } = this;\n    // eslint-disable-next-line no-useless-escape\n    let reg = /(\\-|\\+)?\\d+(\\.\\d+)?px/g;\n    let str = el.style.transform;\n    let translate = str.match(reg);\n\n    return {\n      lastX: translate && translate[0] ? parseInt(translate[0]) : 0,\n      lastY: translate && translate[1] ? parseInt(translate[1]) : 0,\n    };\n  }\n  // \u8fdb\u884c\u79fb\u52a8\n  doTranslate(pixelsX, pixelsY) {\n    const swiper = this;\n    const { el } = this;\n\n    const translate = `translate(${pixelsX}px,0px)`;\n\n    el.style.cssText = `\n        -moz-transform:${translate};\n        -ms-transform:${translate};\n        -o-transform:${translate};\n        -webkit-transform:${translate};\n        transform:${translate};\n        `;\n  }\n  // \u6267\u884cpage\u52a8\u753b\n  goToSlide() {\n    const swiper = this;\n    let {\n      el,\n      state: {\n        slideGrid,\n        initTouch: { initX },\n        lastTouch: { lastX },\n        currentIndex,\n      },\n    } = this;\n\n    // \u6700\u5927slide\u8bc6\u522b\u8ddd\u79bb\n    if (Math.abs(lastX - initX) < maxSlide) {\n      const { translateX } = slideGrid[currentIndex];\n\n      const translate = `translate(-${translateX}px,0px)`;\n\n      el.style.cssText = `\n            transition:transform 600ms;\n            -moz-transform:${translate};\n            -ms-transform:${translate};\n            -o-transform:${translate};\n            -webkit-transform:${translate};\n            transform:${translate};\n            `;\n\n      return;\n    }\n\n    // \u5224\u65ad\u65b9\u5411\n    if (lastX > initX && currentIndex > 0) {\n      currentIndex -= 1;\n    } else if (lastX < initX && currentIndex < slideGrid.length - 1) {\n      currentIndex += 1;\n    }\n\n    const { translateX } = slideGrid[currentIndex];\n\n    const translate = `translate(-${translateX}px,0px)`;\n\n    el.style.cssText = `\n        transition:transform 600ms;\n        -moz-transform:${translate};\n        -ms-transform:${translate};\n        -o-transform:${translate};\n        -webkit-transform:${translate};\n        transform:${translate};\n        `;\n\n    // el.style.transition = \'transform 600ms\';\n    // el.style.transform = `translate(-${translateX}px,0px)`;\n\n    this.state.currentIndex = currentIndex;\n  }\n  // Mount\n  mount() {\n    window.Swiper = this;\n  }\n}\n\nexport default Swiper;\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import Swiper from "./Swiper";\n\nconst Layout = ({ content }) => {\n  useEffect(() => {\n    const initSwiper = {\n      direction: "vertical", // \u6c34\u5e73\u65b9\u5411horizontal \u5782\u76f4\u65b9\u5411vertical\n      initialSlide: 0,\n    };\n\n    new Swiper("swiper-container", initSwiper);\n  }, []);\n\n  return (\n    <div className="swiper-wrapper">\n      <div className="swiper-container">\n        <div className={`${styles.page0} ${styles.pageSlide} swiper-silde`}>\n          0\n        </div>\n        <div className={`${styles.page1} ${styles.pageSlide} swiper-silde`}>\n          1\n        </div>\n        <div className={`${styles.page2} ${styles.pageSlide} swiper-silde`}>\n          2\n        </div>\n      </div>\n    </div>\n  );\n};\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  overflow: hidden;\n}\n:global(.swiper-wrapper) {\n  margin: 0 auto;\n  overflow: hidden;\n  border: indianred 1px solid;\n  position: relative;\n}\n:global(.swiper-container) {\n  display: flex;\n}\n\n.pageSlide {\n  flex-shrink: 0; // \u7981\u6b62\u538b\u7f29\n  width: 100%;\n  height: 50vh;\n  color: #fff;\n}\n.page0 {\n  background: grey;\n}\n.page1 {\n  background: green;\n}\n.page2 {\n  background: blue;\n}\n")),(0,i.kt)("h2",{id:"\u6700\u65b0\u7248left"},"\u6700\u65b0\u7248(left)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-disable consistent-this */\n\nclass Swiper {\n  constructor(element) {\n    this.swiperWrapper = document.getElementsByClassName(element)[0];\n    this.swiperContainer = this.swiperWrapper.childNodes[0];\n\n    this.state = {\n      start: 0, // \u89e6\u6478\u8d77\u59cb\u70b9\n      moveDistance: 0, // \u6ed1\u52a8\u8ddd\u79bb\n      isMoved: false, // \u6807\u8bb0\u662f\u5426\u79fb\u52a8\u8fc7\n      lastMove: 0,\n      moveX: 0,\n      loop: true, // \u662f\u5426loop\n      currntItemIndex: 0, // \u5f53\u524dIndex\n    };\n    this.init();\n  }\n  init() {\n    if (this.state.loop) {\n      this.loop();\n    }\n\n    this.eventsListen();\n    this.setStyle();\n    // this.createIndicator();\n    this.mount();\n  }\n\n  // Event\n  eventsListen() {\n    const swiper = this;\n\n    this.swiperContainer.addEventListener(\n      "touchstart",\n      this.touchStart.bind(swiper),\n      false\n    );\n    this.swiperContainer.addEventListener(\n      "touchmove",\n      this.touchMove.bind(swiper),\n      false\n    );\n    this.swiperContainer.addEventListener(\n      "touchend",\n      this.touchEnd.bind(swiper),\n      false\n    );\n    this.swiperContainer.addEventListener(\n      "transitionend",\n      this.transitionend.bind(swiper),\n      false\n    );\n  }\n  // Getter\n  getData() {}\n  getNode() {}\n  // Setter\n  setStyle() {\n    this.swiperWrapper = document.getElementsByClassName("swiper-wrapper")[0]; // swiper\u5bb9\u5668\n    const width = window.innerWidth;\n\n    this.swiperWrapper.style.width = `${width}px`;\n  }\n\n  // Method\n  touchStart(e) {\n    const swiper = this;\n    const {\n      state: { moveX },\n    } = this;\n    const { clientX } = e.touches[0];\n\n    this.state.start = clientX;\n    // \u62ff\u5230\u4e0a\u6b21\u6ed1\u52a8\u7684\u8ddd\u79bb\uff08\u6bcf\u6b21\u56fa\u5b9a\uff09\n    this.state.lastMove = moveX;\n  }\n  touchMove(e) {\n    const swiper = this;\n    const {\n      state: { start, isMoved, lastMove },\n    } = this;\n    const { clientX } = e.touches[0];\n\n    // \u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb\n    let distanceX = clientX - start;\n\n    // \u91cd\u65b0\u8bbe\u7f6e\u6ed1\u52a8\u7684\u8ddd\u79bb\n    let resultX = isMoved ? lastMove + distanceX : distanceX;\n\n    // this.swiperContainer.style = `transform: translateX(${resultX}px)`;\n    this.swiperContainer.style.transitionDuration = "300ms";\n    this.swiperContainer.style.left = `${resultX}px`;\n\n    // \u66f4\u65b0\u79fb\u52a8\u4f4d\u7f6e\n    this.state.moveX = resultX;\n\n    // \u6807\u8bb0\u5df2\u7ecf\u6ed1\u52a8\n    this.state.isMoved = true;\n\n    // \u66f4\u65b0\u79fb\u52a8\u8ddd\u79bb\n    this.state.moveDistance = distanceX;\n  }\n  touchEnd(e) {\n    const swiper = this;\n    const {\n      state: { moveX, moveDistance, loop, currntItemIndex },\n    } = this;\n\n    let result = moveX;\n    let rightBound = -`${\n      this.swiperContainer.scrollWidth - this.swiperContainer.clientWidth\n    }`;\n    let childLength = this.swiperContainer.childNodes.length;\n\n    // \u5904\u7406\u5de6\u8fb9\u754c\n    if (moveX > 0) {\n      result = 0;\n    }\n    // \u5904\u7406\u53f3\u8fb9\u754c\n    if (moveX < rightBound) {\n      result = rightBound;\n    }\n\n    // \u5904\u7406\u4e2d\u95f4swiper-item\u7684\u8fb9\u754c\n    if (moveDistance > 0) {\n      // \u4ece\u5de6\u5f80\u53f3\u6ed1\u52a8\uff08\u2192\uff09\n      if (\n        moveX > -(this.swiperContainer.clientWidth * currntItemIndex) + 50 &&\n        currntItemIndex > 0\n      ) {\n        // \u6ed1\u5230\u4e0a\u4e00\u4e2aswiper-item\n        result = -(this.swiperContainer.clientWidth * (currntItemIndex - 1));\n      } else {\n        // \u505c\u7559\u5728\u5f53\u524dswiper-item\n        result = -(this.swiperContainer.clientWidth * currntItemIndex);\n      }\n    } else if (moveDistance < 0) {\n      // \u4ece\u53f3\u5f80\u5de6\u6ed1\u52a8\uff08\u2190\uff09\n      if (\n        moveX < -(this.swiperContainer.clientWidth * currntItemIndex) - 50 &&\n        currntItemIndex < childLength - 1\n      ) {\n        // \u6ed1\u5230\u4e0b\u4e00\u4e2aswiper-item\n        result = -(this.swiperContainer.clientWidth * (currntItemIndex + 1));\n      } else {\n        // \u505c\u7559\u5728\u5f53\u524dswiper-item\n        result = -(this.swiperContainer.clientWidth * currntItemIndex);\n      }\n    }\n\n    // \u8ba1\u7b97\u5f53\u524dindex\n    let index = Math.abs(Math.round(result / this.swiperContainer.clientWidth));\n\n    if (loop) {\n      if (index === 0) {\n        // \u5173\u952e\u70b9 \u5982\u679c\u5f53\u524d\u5728 4fake \u7684\u4f4d\u7f6e\n\n        setTimeout(() => {\n          // \u53bb\u6389\u52a8\u753b\n          this.swiperContainer.style.transitionDuration = "0ms";\n\n          // \u9ed8\u9ed8\u7684\u53f3\u79fbboard \u81f3 4\n          this.swiperContainer.style.left = `${-1125}px`;\n        }, 300);\n\n        index = 3;\n      }\n\n      // \u8fdb\u5165\u6700\u540e\u4e00\u9879\uff08\u540c\u7b2c\u4e00\u9879\uff09\n      if (index === childLength - 1) {\n        // \u5173\u952e\u70b9 \u5982\u679c\u5f53\u524d\u5728 4fake \u7684\u4f4d\u7f6e\n\n        setTimeout(() => {\n          // \u53bb\u6389\u52a8\u753b\n          this.swiperContainer.style.transitionDuration = "0ms";\n\n          // \u9ed8\u9ed8\u7684\u53f3\u79fbboard \u81f3 4\n          this.swiperContainer.style.left = `${-375}px`;\n        }, 300);\n\n        index = 1;\n      }\n    }\n\n    this.state.currntItemIndex = index;\n    // \u79fb\u52a8\n    // this.swiperContainer.style = `transform: translateX(${result}px);transition: transform 600ms`;\n\n    this.swiperContainer.style.transitionDuration = "300ms";\n    this.swiperContainer.style.left = `${result}px`;\n\n    // \u66f4\u65b0\u6307\u793a\u70b9\n    let dots = document.getElementsByClassName("dot");\n\n    for (let i = 0; i < dots.length; i++) {\n      dots[i].setAttribute("class", `dot ${index === i ? "dot-active" : ""}`);\n    }\n\n    // \u66f4\u65b0\u79fb\u52a8\n    this.state.moveX = result;\n\n    // \u6ed1\u52a8\u8ddd\u79bb\u6062\u590d\u4e3a0\n    this.state.moveDistance = 0;\n  }\n  // \u6307\u793a\u5668\n  createIndicator() {\n    const swiper = this;\n    const {\n      state: { currntItemIndex },\n    } = this;\n    let dotWrap = document.createElement("div");\n    let dot = document.createElement("span");\n\n    // clas\u7c7b\u540d\n    dotWrap.setAttribute("class", "indicator-wrapper");\n\n    const childNodes =\n      this.swiperContainer.querySelectorAll("div.swiper-slide");\n\n    for (let i = 0; i < childNodes.length; i++) {\n      dot.setAttribute(\n        "class",\n        `dot ${currntItemIndex === i ? "dot-active" : ""}`\n      );\n      dotWrap.appendChild(dot.cloneNode(true));\n    }\n    const dotItems = dotWrap.childNodes;\n\n    dotItems[0].style.display = "none";\n    dotItems[4].style.display = "none";\n\n    this.swiperWrapper.appendChild(dotWrap.cloneNode(true));\n  }\n  loop() {\n    const swiper = this;\n    const {\n      state: { currntItemIndex, moveX, lastMove },\n    } = this;\n    const swiperContainerChildNodes = this.swiperContainer.childNodes;\n\n    // \u524d\u540e\u590d\u5236\n    this.swiperContainer.appendChild(\n      swiperContainerChildNodes[0].cloneNode(true)\n    );\n    this.swiperContainer.insertBefore(\n      swiperContainerChildNodes[2].cloneNode(true),\n      swiperContainerChildNodes[0]\n    );\n\n    // \u5b9a\u4f4d\u5230\u7b2c\u4e00\u9879\n    this.state.currntItemIndex = currntItemIndex + 1;\n    const result = -(this.swiperContainer.clientWidth * (currntItemIndex + 1));\n\n    // \u66f4\u65b0\u6837\u5f0f\n    // this.swiperContainer.style.transform = `translateX(${result}px)`;\n\n    this.swiperContainer.style.left = `${result}px`;\n\n    this.state.moveX = result;\n  }\n  transitionend(e) {\n    const swiper = this;\n    const {\n      state: { loop, currntItemIndex, moveX },\n    } = this;\n    let childLength = this.swiperContainer.childNodes.length;\n  }\n  // Mount\n  mount() {\n    window.Swiper = this;\n  }\n}\n\nexport default Swiper;\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import Swiper from "./Swiper";\n\nconst Layout = ({ content }) => {\n  useEffect(() => {\n    new Swiper2("swiper-wrapper");\n  }, []);\n\n  return (\n    <div className="swiper-wrapper">\n      <div className="swiper-container">\n        <div className="swiper-slide">1</div>\n        <div className="swiper-slide bg-color-2">2</div>\n        <div className="swiper-slide">3</div>\n      </div>\n    </div>\n  );\n};\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  /* border: 1px solid red; */\n  overflow: hidden;\n}\n:global(.swiper-wrapper) {\n  border: 1px solid blue;\n  margin: 0 auto;\n  overflow: hidden;\n  height: 50vh;\n}\n:global(.swiper-container) {\n  position: absolute;\n  width: 100%;\n  display: flex;\n}\n:global(.swiper-slide) {\n  flex: 1 0 auto;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  background-color: grey;\n  font-size: 60px;\n  font-weight: bold;\n}\n:global(.bg-color-2) {\n  background: green;\n}\n\n:global(.indicator-wrapper) {\n  position: absolute;\n  left: 0;\n  bottom: 20px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n:global(.dot) {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: rgba(255, 255, 255, 0.3);\n  margin: 0 4px;\n}\n\n:global(.dot-active) {\n  background-color: rgba(255, 255, 255, 1);\n}\n")),(0,i.kt)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://juejin.cn/post/6995039882888347679#heading-16"},"\u81ea\u5df1\u52a8\u624b\u5199\u8f6e\u64ad\u56fe Swiper\u2014\u2014\u539f\u751f JS \u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.jianshu.com/p/63e25d38058f"},"js \u8f6e\u64ad\u7684 bug")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.1024sou.com/article/459534.html"},"\u52a8\u6001\u521d\u59cb\u5316 swiper \u65f6\uff0c\u8f6e\u64ad\u56fe\u5212\u4e0d\u52a8\u5f97\u5404\u79cd bug \u89e3\u51b3\u65b9\u6cd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.csdn.net/weixin_44544859/article/details/86517970"},"\u4e00\u4e2a\u5728 JavaScript \u8f6e\u64ad\u4e2d\u5e38\u89c1\u7684 bug \u4ee5\u53ca\u89e3\u51b3\u65b9\u6cd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://juejin.cn/post/7023315951181365279"},"\u57fa\u4e8e swiper \u5b9e\u73b0\u5300\u901f\u81ea\u52a8\u8f6e\u64ad\uff08\u8e29\u5751\u6587\uff09")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.shouxicto.com/article/1157.html"},"Swiperjs \u63d2\u4ef6\u8f6e\u64ad\u6ed1\u52a8\u5361\u987f\u4f18\u5316")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://juejin.cn/post/6844903533452476429#heading-2"},"\u539f\u751f js \u7cfb\u5217\u4e4b\u65e0\u9650\u5faa\u73af\u8f6e\u64ad\u7ec4\u4ef6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/aooy/blog/issues/3"},"\u6ed1\u52a8\u6548\u679c\u7684\u539f\u7406\u53ca\u5b9e\u8df5\u4e00\u4e2a\u6ed1\u52a8\u5c0f\u63d2\u4ef6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://codepen.io/h4px/pen/ZeYaQO?editors=1010"},"\u65e0\u9650\u8f6e\u64ad")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.jianshu.com/p/f3c2eac20064"},"js \u65e0\u7f1d\u65e0\u9650\u5faa\u73af\u8f6e\u64ad\u56fe\u5236\u4f5c\u601d\u8def")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://juejin.cn/post/6978859955461816351#heading-4"},"JS \u5b9e\u73b0\u65e0\u9650\u8f6e\u64ad")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://zhuanlan.zhihu.com/p/80358633"},"\u539f\u751f JS \u624b\u5199\u65e0\u7f1d\u65e0\u9650\u8f6e\u64ad carousel")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fooooooof.github.io/handmade_javascript/component/carousel/assets/carousel.html"},"DEMO")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.jb51.net/article/200143.htm"},"JavaScript \u5b9e\u73b0\u65e0\u9650\u8f6e\u64ad\u6548\u679c"))))}h.isMDXComponent=!0}}]);