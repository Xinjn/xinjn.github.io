"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[84043],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>d});var a=t(67294);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,a,s=function(n,e){if(null==n)return{};var t,a,s={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var o=a.createContext({}),c=function(n){var e=a.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=c(n.components);return a.createElement(o.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,s=n.mdxType,r=n.originalType,o=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),m=c(t),d=s,y=m["".concat(o,".").concat(d)]||m[d]||p[d]||r;return t?a.createElement(y,i(i({ref:e},u),{},{components:t})):a.createElement(y,i({ref:e},u))}));function d(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var r=t.length,i=new Array(r);i[0]=m;var l={};for(var o in e)hasOwnProperty.call(e,o)&&(l[o]=e[o]);l.originalType=n,l.mdxType="string"==typeof n?n:s,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},97468:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=t(87462),s=(t(67294),t(3905));const r={},i=void 0,l={unversionedId:"\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5206\u9875\u7ec4\u4ef6/\u5206\u9875\u52a0\u8f7d\u7ec4\u4ef6",id:"\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5206\u9875\u7ec4\u4ef6/\u5206\u9875\u52a0\u8f7d\u7ec4\u4ef6",title:"\u5206\u9875\u52a0\u8f7d\u7ec4\u4ef6",description:"\u63a5\u53e3",source:"@site/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5206\u9875\u7ec4\u4ef6/\u5206\u9875\u52a0\u8f7d\u7ec4\u4ef6.md",sourceDirName:"\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5206\u9875\u7ec4\u4ef6",slug:"/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5206\u9875\u7ec4\u4ef6/\u5206\u9875\u52a0\u8f7d\u7ec4\u4ef6",permalink:"/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5206\u9875\u7ec4\u4ef6/\u5206\u9875\u52a0\u8f7d\u7ec4\u4ef6",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5206\u9875\u7ec4\u4ef6/\u5206\u9875\u52a0\u8f7d\u7ec4\u4ef6.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"react-sticky-el\u5438\u9644\u7ec4\u4ef6",permalink:"/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/react-sticky-el\u5438\u9644\u7ec4\u4ef6/"},next:{title:"\u81ea\u5b9a\u4e49HOOK",permalink:"/docs/\u516c\u53f8/\u51e4\u51f0\u7f51/\u7ec4\u4ef6\u4f7f\u7528\u6587\u6863/\u7ec4\u4ef6\u6c47\u603b/\u5206\u9875\u7ec4\u4ef6/\u81ea\u5b9a\u4e49HOOK"}},o={},c=[],u={toc:c};function p(n){let{components:e,...t}=n;return(0,s.kt)("wrapper",(0,a.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u63a5\u53e3"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// \u83b7\u53d6\u8c03\u67e5\u6570\u636e\nexport const getSurveyData = async id => {\n    return await jsonp('//sv.ifeng.com/index.php/survey/getdata', {\n        data: {\n            id,\n        },\n        jsonpCallback: createJsonpCallbackName('getSurveyData'),\n        cache: false,\n    });\n};\n\n// \u63d0\u4ea4\u8c03\u67e5\u6570\u636e\nexport const postSurveyData = async (param, id) => {\n    return await jsonp(`//sv.ifeng.com/index.php/survey/postsurvey?${param}`, {\n        data: {\n            id,\n            act: 'postsurvey',\n            surid: id,\n        },\n        jsonpCallback: createJsonpCallbackName('postSurveyData'),\n        cache: false,\n    });\n};\n\n// \u83b7\u53d6\u4f5c\u54c1\u6570\u636e\nexport const getGalleryData = async () => {\n    const data = await jsonp(\n        'https://shankapi.ifeng.com/feedflow/coopdoc/doc_64e20fccc7af0beafb8366d99eca074c/info/getGalleryData',\n        {\n            jsonpCallback: 'getGalleryData',\n            cache: false,\n        },\n    );\n\n    if (data.code === 0) {\n        return data.data;\n    }\n\n    return {};\n};\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './index.css';\nimport errorBoundary from '@ifeng/errorBoundary';\n// getSurveyData\u83b7\u53d6\u8c03\u67e5\u6570\u636e   postSurveyData\u63d0\u4ea4\u8c03\u67e5\u6570\u636e  getGalleryData\u83b7\u53d6\u4f5c\u54c1\u6570\u636e\nimport { getSurveyData, postSurveyData, getGalleryData } from '../../../services/api';\n\nconst menu = [...Array(3).keys()];\n\nconst dataSource = [];\n\nlet surveyId = '';\nlet questionid = '';\n\nclass Gallery extends React.PureComponent {\n    static propTypes = {\n        handleGalleryShow: PropTypes.func,\n        blackList: PropTypes.array,\n    };\n\n    state = {\n        value: '\u4f5c\u54c1\u540d\u79f0/\u4f5c\u54c1\u7f16\u53f7',\n        type: 0,\n        subType: 0,\n        content: [],\n        galleryData: {},\n        current: 0,\n        total: 0,\n        itemidArr: [],\n    };\n\n   // \u8bbe\u7f6e\u521d\u59cb\u5316\u6570\u636e\uff08\u5916\u90e8\u65b9\u6cd5\u76f4\u63a5\u4f7f\u7528\uff0c\u5185\u90e8\u65b9\u5f0f\u9700\u8981this\u8c03\u7528\uff09\n   async componentDidMount() {\n    // step1\uff1a\u8c03\u7528\u670d\u52a1\u7aefapi ,\u83b7\u53d6\u5c55\u89c8 \u539f\u59cbjson\u6570\u636e\uff08\u5916\u90e8\uff09\n    // \u4f7f\u7528await\u5f02\u6b65\u83b7\u53d6\u6570\u636e\uff08\u83b7\u53d6\u670d\u52a1\u7aef\u6570\u636e\u90fd\u8981\u4f7f\u7528await\u5f02\u6b65\uff0c\u5426\u4fa7\u53ea\u80fd\u83b7\u53d6\u6570\u636e\u4e2d\u540c\u6b65\u6570\u636e\uff0c\u4f8b\u5982\u6587\u672c\uff09\n    const galleryData = await getGalleryData();\n\n    // step2:\u586b\u5145\u5230State\u4e2d\u5168\u5c40\u4f7f\u7528\uff0c\u89e6\u53d1UI\u66f4\u65b0\n    this.setState(\n        {\n            galleryData,\n        },\n        () => {\n            // \u89e6\u53d1\u4e8c\u6b21\u6e32\u67d3UI\u66f4\u65b0\uff08\u5185\u90e8\uff09\n            this.getGalleryData();\n        },\n    );\n}\n    // \u6839\u636etype\u7c7b\u578b =\u300b\u8bf7\u6c42\u4e0d\u540c\u6570\u636e \u5bf9 \u670d\u52a1\u7aef\u6570\u636e \u4e8c\u6b21\u5c01\u88c5\u5b58\u5165state\n    getGalleryData = async () => {\n        const { type, subType, galleryData } = this.state;\n        const { blackList } = this.props;\n\n        if (type === 1) {\n            surveyId = '6683285070293241856';\n        } else if (type === 2) {\n            surveyId = '6683285525270372352';\n        } else if (subType === 1) {\n            surveyId = '6683281540127924224';\n        } else {\n            surveyId = '6683280809983483904';\n        }\n\n        const content = await getSurveyData(surveyId);\n\n        questionid = content.data.result[0].resultArray.questionid;\n\n        const newContent = content.data.result[0].resultArray.option\n            .filter(item => !blackList.includes(item.title))\n            .map(item => ({\n                itemid: item.itemid,\n                num: item.num,\n                title: item.title,\n                ...galleryData[item.title],\n            }));\n\n            console.log(newContent);\n        // dataSource = [...newContent];\n\n        this.setState({\n            content: newContent,\n            current: 0,\n            total: Math.ceil(newContent.length / 4) - 1,\n            itemidArr: [],\n        });\n    };\n\n    // \u63d0\u4ea4\u4f5c\u54c1\u6570\u636e\uff08\u70b9\u8d5e\u529f\u80fd\uff09\n    postGallery = async itemid => {\n        console.log('\u70b9\u8d5e');\n        const { content, itemidArr } = this.state;\n\n        itemidArr.push(itemid);\n\n        const param = `sur[${questionid}][]=${itemid}`;\n\n        const data = await postSurveyData(param, surveyId);\n\n        if (data.ifsuccess === 1) {\n            const item = content.filter(item => item.itemid === itemid);\n\n            item[0].num += 1;\n\n            this.setState({\n                itemidArr: [...itemidArr],\n                content: [...content],\n            });\n        } else {\n            window.alert(data.msg);\n        }\n    };\n\n    // \u7c7b\u578btype\u6539\u53d8\n    handleTypeChange = type => {\n        this.setState(\n            {\n                type,\n                subType: 0,\n            },\n            () => { // \u66f4\u65b0UI\u6e32\u67d3\n                this.getGalleryData();\n            },\n        );\n    };\n\n    handleSubTypeChange = subType => {\n        this.setState(\n            {\n                subType,\n            },\n            () => { // \u66f4\u65b0UI\u6e32\u67d3\n                this.getGalleryData();\n            },\n        );\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            value: e.currentTarget.value,\n        });\n    };\n\n    handleInputClear = () => {\n        const { value } = this.state;\n\n        if (value === '\u4f5c\u54c1\u540d\u79f0/\u4f5c\u54c1\u7f16\u53f7') {\n            this.setState({\n                value: '',\n            });\n        }\n    };\n\n    handleInputBack = () => {\n        const { value } = this.state;\n\n        if (value === '') {\n            this.setState({\n                value: '\u4f5c\u54c1\u540d\u79f0/\u4f5c\u54c1\u7f16\u53f7',\n            });\n        }\n    };\n\n    handleSearch = () => {\n        const { value } = this.state;\n\n        if (value === '\u4f5c\u54c1\u540d\u79f0/\u4f5c\u54c1\u7f16\u53f7') return;\n\n        const data = dataSource.filter(item => item.title.includes(value) || item.nox.includes(value));\n\n        this.setState({\n            content: [...data],\n            current: 0,\n            total: Math.ceil(data.length / 4) - 1,\n        });\n    };\n\n    handleInputBackAll = () => {\n        this.setState(\n            {\n                value: '\u4f5c\u54c1\u540d\u79f0/\u4f5c\u54c1\u7f16\u53f7',\n            },\n            () => {\n                this.getGalleryData();\n            },\n        );\n    };\n\n    // \u5361\u7247HTML\n    getItem = (item, index, itemidArr) => {\n        return (\n            <div key={index} className={styles.list_item}>\n                <img src={item.img} onClick={() => this.props.handleGalleryShow(item)} />\n                <span className={styles.title}>{item.title.slice(0, 20)}</span>\n                <div className={styles.author_box}>\n                    <span className={styles.author}>{item.author}</span>\n                    <span className={styles.nox}>{item.nox}</span>\n                </div>\n                <div className={styles.vote_box}>\n                    <span className={styles.num}>\n                        <span\n                            className={itemidArr.includes(item.itemid) ? styles.active_icon : styles.icon}\n                            onClick={() => this.postGallery(item.itemid)}\n                        />\n                        <span>{item.num}</span>\n                    </span>\n                    <span className={styles.vote} onClick={() => this.postGallery(item.itemid)} />\n                </div>\n            </div>\n        );\n    };\n    // \u4e0a\u4e00\u9875\n    handlePageBefore = () => {\n\n        const { current } = this.state;\n        \n        let page = current;\n\n        // \u7b2c\u4e00\u9875\n        if (page === 0) {\n            window.alert('\u5df2\u7ecf\u662f\u7b2c\u4e00\u9875\u4e86\uff01');\n        } else {\n            page -= 1;\n\n            this.setState({\n                current: page,\n            });\n        }\n    };\n    // \u4e0b\u4e00\u9875\n    handlePageForward = () => {\n        const { current, total } = this.state;\n\n        let page = current;\n\n        if (page === total) {\n            window.alert('\u5df2\u7ecf\u662f\u6700\u540e\u4e00\u9875\u4e86\uff01');\n        } else {\n            page += 1;\n\n            this.setState({\n                current: page,\n            });\n        }\n    };\n\n    render() {\n        const { value, type, subType, content, current, itemidArr } = this.state;\n\n        // \u66f4\u65b0\u5217\u8868\uff08\u6bcf\u6b21\u66f4\u65b04\u4e2a\uff09\n        const list = content.slice(4 * current, 4 * (current + 1));\n        \nreturn (\n            <Fragment>\n                <div className={styles.gallery_box}>\n                    <div className={styles.menu_box}>\n                        {menu.map(item => (\n                            <span\n                                key={item}\n                                className={\n                                    type === item\n                                        ? `${styles[`active_menu${item}`]} ${styles.active_menu}`\n                                        : `${styles[`menu${item}`]} ${styles.menu}`\n                                }\n                                onClick={() => this.handleTypeChange(item)}\n                            />\n                        ))}\n                    </div>\n                    <div className={styles.search_box}>\n                        <input\n                            value={value}\n                            onChange={this.handleInputChange}\n                            onFocus={this.handleInputClear}\n                            onBlur={this.handleInputBack}\n                        />\n                        <a className={styles.search} onClick={this.handleSearch} />\n                        <a className={styles.back} onClick={this.handleInputBackAll} />\n                    </div>\n                    {/* <div className={styles.sub_menu}>\n                        {type === 0 && (\n                            <Fragment>\n                                <span\n                                    className={subType === 0 ? styles.active_sub_menu0 : styles.sub_menu0}\n                                    onClick={() => this.handleSubTypeChange(0)}\n                                />\n                                <span\n                                    className={subType === 1 ? styles.active_sub_menu1 : styles.sub_menu1}\n                                    onClick={() => this.handleSubTypeChange(1)}\n                                />\n                            </Fragment>\n                        )}\n                    </div> */}\n                    <div className={styles.content_box}>\n                        <div className={styles.item_box}>\n                            {list.slice(0, 2).map((item, index) => this.getItem(item, index, itemidArr))}\n                        </div>\n                        <div className={styles.item_box}>\n                            {list.slice(2, 4).map((item, index) => this.getItem(item, index, itemidArr))}\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.page_box}>\n                    <span className={styles.before} onClick={this.handlePageBefore} />\n                    <span className={styles.forward} onClick={this.handlePageForward} />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default errorBoundary(Gallery);\n")))}p.isMDXComponent=!0}}]);