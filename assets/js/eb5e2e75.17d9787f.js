"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[26758],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=o.createContext({}),l=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,f=p["".concat(a,".").concat(m)]||p[m]||u[m]||i;return n?o.createElement(f,c(c({ref:t},d),{},{components:n})):o.createElement(f,c({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=p;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var l=2;l<i;l++)c[l]=n[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},22708:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const i={},c=void 0,s={unversionedId:"\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6/\u76f8\u518c\u89c6\u9891\u4e8b\u4ef6",id:"\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6/\u76f8\u518c\u89c6\u9891\u4e8b\u4ef6",title:"\u76f8\u518c\u89c6\u9891\u4e8b\u4ef6",description:"\u5feb\u901f\u4e0a\u624b",source:"@site/docs/\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6/\u76f8\u518c\u89c6\u9891\u4e8b\u4ef6.md",sourceDirName:"\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6",slug:"/\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6/\u76f8\u518c\u89c6\u9891\u4e8b\u4ef6",permalink:"/docs/\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6/\u76f8\u518c\u89c6\u9891\u4e8b\u4ef6",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6/\u76f8\u518c\u89c6\u9891\u4e8b\u4ef6.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u76f8\u518c\u56fe\u7247\u4e8b\u4ef6",permalink:"/docs/\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6/\u76f8\u518c\u56fe\u7247\u4e8b\u4ef6"},next:{title:"\u957f\u6309\u4e8b\u4ef6",permalink:"/docs/\u8de8\u5e73\u53f0/\u79fb\u52a8\u7aef/\u4e8b\u4ef6/\u957f\u6309\u4e8b\u4ef6"}},a={},l=[{value:"\u5feb\u901f\u4e0a\u624b",id:"\u5feb\u901f\u4e0a\u624b",level:2}],d={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u5feb\u901f\u4e0a\u624b"},"\u5feb\u901f\u4e0a\u624b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const videoLimit = 2;\n\nconst Upload = () => {\n  const formStore = FormStore.useContainer();\n  const { formStates, changeFormStates } = formStore;\n  const { videoList } = formStates;\n\n  const handleVideoUploadClick = async () => {\n    const list = await chooseVideo({ count: videoLimit - videoList.length });\n\n    changeFormStates({ videoList: [...videoList, ...list] });\n  };\n\n  return (\n    <div className={styles.wrap}>\n      {\n        //\u5c55\u793aUI\n        //     videoList.map(item => {\n        //     const { id } = item;\n        //     return <Grid content={item} key={id} type={'video'} />;\n        // })\n      }\n      {videoList.length >= videoLimit || imageList.length ? null : (\n        <div className={styles.imgUploadBtn} onClick={handleVideoUploadClick}>\n          \u6dfb\u52a0\u89c6\u9891\n        </div>\n      )}\n    </div>\n  );\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { v4 as uuidv4 } from "uuid";\n\n// \u5c01\u88c5\u8c03\u8d77\u76f8\u518c\u9009\u62e9\u89c6\u9891API\nexport const chooseVideo = async ({ count = 1 }) => {\n  const videoId = "chooseVideo";\n  // \u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u7684dom\u8282\u70b9\n  let chooseVideoId = document.getElementById(videoId);\n\n  // \u5982\u679c\u4e0a\u4f20\u6587\u4ef6\u7684dom\u8282\u70b9\u4e0d\u5b58\u5728\u5219\u521b\u5efa\n  if (!chooseVideoId) {\n    const obj = document.createElement("input");\n\n    obj.setAttribute("type", "file");\n    obj.setAttribute("id", videoId);\n    if (count > 1) {\n      obj.setAttribute("multiple", "multiple");\n    }\n    obj.setAttribute("accept", "video/*");\n    obj.setAttribute(\n      "style",\n      "position: fixed; top: -4000px; left: -3000px; z-index: -300;"\n    );\n    document.body.appendChild(obj);\n    chooseVideoId = document.getElementById(videoId);\n  } else if (count > 1) {\n    chooseVideoId.setAttribute("multiple", "multiple");\n  } else {\n    chooseVideoId.removeAttribute("multiple");\n  }\n\n  // \u521b\u5efa\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\n  const event = new MouseEvent("click");\n\n  // \u83b7\u53d6\u4e0a\u4f20\u7684\u89c6\u9891\n  const files = await new Promise((resolve) => {\n    chooseVideoId.onchange = (e) => {\n      resolve([...e.target.files]);\n    };\n    // \u4e0a\u4f20\u6587\u4ef6dom\u89e6\u53d1\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\n    chooseVideoId.dispatchEvent(event);\n  });\n\n  const list = files.slice(0, count).map((file) => {\n    const blob = new Blob([file], { type: "video/mp4" });\n    const url = URL.createObjectURL(blob);\n\n    return { path: url, size: file.size, type: file.type, file, id: uuidv4() };\n  });\n\n  return list;\n};\n')))}u.isMDXComponent=!0}}]);